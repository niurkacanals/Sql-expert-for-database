// Package models contains the types for schema ''.
package models

// GENERATED BY XO. DO NOT EDIT.

// SqForeignKey represents a row from .
type SqForeignKey struct {
	ID            int    // id
	Seq           int    // seq
	RefTableName  string // ref_table_name
	ColumnName    string // column_name
	RefColumnName string // ref_column_name
	OnUpdate      string // on_update
	OnDelete      string // on_delete
	Match         string // match
}

// SqForeignKeysByTable runs a custom query, returning results as SqForeignKey.
func SqForeignKeysByTable(db XODB, table string) ([]*SqForeignKey, error) {
	var err error

	// sql query
	var sqlstr = `PRAGMA foreign_key_list(` + table + `)`

	// run query
	XOLog(sqlstr)
	q, err := db.Query(sqlstr, table)
	if err != nil {
		return nil, err
	}
	defer q.Close()

	// load results
	res := []*SqForeignKey{}
	for q.Next() {
		sfk := SqForeignKey{}

		// scan
		err = q.Scan(&sfk.ID, &sfk.Seq, &sfk.RefTableName, &sfk.ColumnName, &sfk.RefColumnName, &sfk.OnUpdate, &sfk.OnDelete, &sfk.Match)
		if err != nil {
			return nil, err
		}

		res = append(res, &sfk)
	}

	return res, nil
}
