// Package models contains the types for schema 'public'.
package models

// GENERATED BY XO. DO NOT EDIT.

// Enum represents a PostgreSQL enum value.
type Enum struct {
	EnumType   string // enum_type
	EnumValue  string // enum_value
	ConstValue int    // const_value
	Type       string // type
	Value      string // value
	Comment    string // comment
}

// EnumsBySchema runs a custom query, returning results as Enum.
func EnumsBySchema(db XODB, schema string) ([]*Enum, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`t.typname, ` + // ::varchar AS enum_type
		`e.enumlabel, ` + // ::varchar AS enum_value
		`e.enumsortorder, ` + // ::integer AS const_value
		`'', ` + // ::varchar AS type
		`'', ` + // ::varchar AS value
		`'' ` + // ::varchar AS comment
		`FROM pg_type t ` +
		`LEFT JOIN pg_namespace n ON n.oid = t.typnamespace ` +
		`JOIN pg_enum e ON t.oid = e.enumtypid ` +
		`WHERE n.nspname = $1`

	// run query
	q, err := db.Query(sqlstr, schema)
	if err != nil {
		return nil, err
	}
	defer q.Close()

	// load results
	res := []*Enum{}
	for q.Next() {
		e := Enum{}

		// scan
		err = q.Scan(&e.EnumType, &e.EnumValue, &e.ConstValue, &e.Type, &e.Value, &e.Comment)
		if err != nil {
			return nil, err
		}

		res = append(res, &e)
	}

	return res, nil
}
