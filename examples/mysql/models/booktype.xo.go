// Package models contains the types for schema 'booktest'.
package models

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql/driver"
	"errors"
)

// Booktype is the 'booktype' enum type.
type Booktype uint16

const (
	// FictionBooktype is the booktype for 'FICTION'.
	FictionBooktype = Booktype(1)

	// NonfictionBooktype is the booktype for 'NONFICTION'.
	NonfictionBooktype = Booktype(2)
)

// String returns the string value of the Booktype.
func (b Booktype) String() string {
	var enumVal string

	switch b {
	case FictionBooktype:
		enumVal = "FICTION"

	case NonfictionBooktype:
		enumVal = "NONFICTION"
	}

	return enumVal
}

// MarshalText marshals Booktype into text.
func (b Booktype) MarshalText() ([]byte, error) {
	return []byte(b.String()), nil
}

// UnmarshalText unmarshals Booktype from text.
func (b *Booktype) UnmarshalText(text []byte) error {
	switch string(text) {
	case "FICTION":
		*b = FictionBooktype

	case "NONFICTION":
		*b = NonfictionBooktype

	default:
		return errors.New("invalid Booktype")
	}

	return nil
}

// Value satisfies the sql/driver.Valuer interface for Booktype.
func (b Booktype) Value() (driver.Value, error) {
	return b.String(), nil
}

// Scan satisfies the database/sql.Scanner interface for Booktype.
func (b *Booktype) Scan(src interface{}) error {
	buf, ok := src.([]byte)
	if !ok {
		return errors.New("invalid Booktype")
	}

	return b.UnmarshalText(buf)
}
