// Code generated by go-bindata.
// sources:
// templates/mysql.enum.go.tpl
// templates/mysql.fkey.go.tpl
// templates/mysql.idx.go.tpl
// templates/mysql.model.go.tpl
// templates/mysql.proc.go.tpl
// templates/mysql.query.go.tpl
// templates/postgres.enum.go.tpl
// templates/postgres.fkey.go.tpl
// templates/postgres.idx.go.tpl
// templates/postgres.model.go.tpl
// templates/postgres.proc.go.tpl
// templates/postgres.query.go.tpl
// templates/xo_db.go.tpl
// templates/xo_package.go.tpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _mysqlEnumGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x93\x41\x8f\xd3\x30\x10\x85\xcf\xf1\xaf\x18\x7a\x69\xbc\xea\xba\xe2\xc2\x61\xa5\x9e\x10\x47\xb8\xec\xc2\x05\x71\x70\x13\x7b\x6b\xd1\x38\x60\x3b\x5d\x56\x51\xfe\x3b\xe3\xd8\xa6\x4e\x49\x2a\xe8\xa5\x6a\x26\xe3\x37\x5f\xde\x1b\x6f\xb7\xd0\xf7\xc0\x9e\x5e\x7f\x08\x18\x06\x50\x16\xdc\x41\xc0\xda\xd7\x3e\xe8\xae\x89\xf5\x35\x08\x7c\x00\x87\x4f\x8c\xf8\xdf\xc9\xa1\x4e\x69\xf7\xf6\x1d\x21\x55\xab\xad\x83\x92\xf4\xfd\x3d\x18\xae\x9f\x05\xb0\x2f\xfc\xd8\x09\x8b\x4d\xa4\x88\x93\xc6\x0a\x16\x66\xa6\x5e\x0c\x05\xd9\x9a\x33\x49\x3a\xb7\x66\xa4\x58\xd2\xd9\xe5\x58\xa5\xff\xff\xde\x23\xa5\x56\x8a\x64\xf8\x21\x35\xdc\x23\x0f\x25\x04\x89\x1e\x9d\x51\xfa\x19\x8c\x70\x9d\xd1\x81\xc2\x86\xd2\x69\x3c\xd4\xca\x3f\x64\x51\x96\x11\xd9\xe9\x0a\xbc\xba\x3d\xb4\xc6\x69\xde\x88\x33\x41\xd6\x48\xa3\x78\x49\x93\x64\x4f\x8a\x13\x37\xa3\x95\x88\x14\xab\x84\x14\xf6\x45\xb9\xea\x00\x0b\x8a\x0b\x76\x56\xdc\x8a\x25\x43\x1f\x48\x51\xa4\x29\x3b\x58\x5d\x5a\xb8\xca\x7d\x28\x06\x24\x08\xdf\x9f\xc8\xc8\x30\x7a\xf3\x91\x1b\x7b\xe0\xc7\x27\xf1\xcb\x41\x13\xfe\xdb\xe9\xb2\x68\xd7\x82\xc3\xd7\xff\xe1\x49\x26\x8a\xc6\x94\x5f\xbf\xed\x5f\x9d\xd8\x80\x30\xa6\x35\xd4\x3b\x14\x51\xc2\x8b\x79\x45\x96\x8c\xa5\x1b\xd0\x2a\xe1\x7e\xd6\x4d\x06\xdc\xe9\x59\x64\x69\xda\xe6\x1f\x90\xef\x26\xcc\x13\xe5\xd2\x9f\x8e\x78\x34\x70\x7b\xec\x98\x61\xc8\x74\xec\xa1\xc5\xd5\xe8\xfe\x4e\xc5\xa7\x76\x37\xcf\xb3\x5b\x4a\x3a\x25\x39\xf8\x14\x6b\x21\x79\x77\x74\x5e\x27\x05\xea\xf1\x2c\xfb\x24\x5e\xca\x95\xd2\xb8\xd2\xaa\xce\xed\x58\xd1\x49\xfc\x67\x2f\xc3\x24\xcb\x9d\xb2\x52\x89\x78\x2f\x7e\x1e\xb7\xb5\x51\x27\x61\x02\x88\xf1\xf9\x0b\x23\x79\x25\xc6\x9b\x7a\xdb\x1d\x19\xa5\xfc\x26\xe4\xd2\x33\xfb\x70\x7d\x11\xf2\x3d\x78\xac\xb8\xbe\x40\xaf\xb9\xe3\x7b\x34\x7d\x8b\xdf\xc0\xfc\x7b\x7d\x3b\xfd\x74\x35\xbc\x58\x69\x4d\x75\x56\xeb\x87\x6c\x2b\xf6\x9d\xdc\x40\xfb\x1d\x1e\x76\x80\x4d\x2c\xae\x3b\xba\xae\x24\xbc\xc1\x3a\xb6\x00\xc0\x4d\x61\xcd\x1b\x32\x5d\x55\x1c\x4f\xbd\x2b\xbf\x03\x00\x00\xff\xff\x0e\x16\xf2\x15\xe5\x05\x00\x00"

func mysqlEnumGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mysqlEnumGoTpl,
		"mysql.enum.go.tpl",
	)
}

func mysqlEnumGoTpl() (*asset, error) {
	bytes, err := mysqlEnumGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql.enum.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysqlFkeyGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x4f\xcb\x8a\x83\x30\x14\x5d\x4f\xbe\xe2\xee\xc6\x88\x24\xff\xe0\x0c\x33\x8b\x42\x0b\xa5\x8b\x6e\xad\x5e\x6b\x40\x93\x72\x13\x29\x22\xfe\x7b\x4d\x7c\x60\xa5\x90\xcd\xb9\xe7\x91\x73\xa4\x84\xbe\x07\x71\xe9\x1e\x08\xc3\x00\x84\xae\x25\x6d\xc1\x55\x18\xee\x67\x2c\x17\x2a\xb3\xd6\xe4\x2a\x73\x58\xc0\x53\xb9\x6a\x95\xcc\xfc\xb7\x0d\xe8\x4f\x61\x5d\x78\x79\xe4\xd1\x8f\xa9\xdb\x46\x1f\xb3\xc6\x2b\xb8\x60\x52\x8e\x0f\xfe\x51\x23\x85\xa0\x92\x4c\x33\xd9\x0c\xa1\xba\xeb\x03\x76\xb3\x58\xb0\xb2\xd5\x79\x48\xb1\x95\x21\xa7\xfd\x79\xad\x19\x6f\x3e\xe6\xbb\xa2\x51\x71\x83\xeb\xe9\x37\xe5\x10\xc5\xef\x4c\x02\x48\x64\x68\x34\xb0\xaf\x69\xe8\xce\x9a\x76\x33\x5e\x56\x8c\x59\x09\x7c\xac\x20\xb6\x63\x39\x1b\x18\x7b\x05\x00\x00\xff\xff\xdc\x08\x13\x0d\x4a\x01\x00\x00"

func mysqlFkeyGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mysqlFkeyGoTpl,
		"mysql.fkey.go.tpl",
	)
}

func mysqlFkeyGoTpl() (*asset, error) {
	bytes, err := mysqlFkeyGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql.fkey.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysqlIdxGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x55\xdf\x4f\xdb\x30\x10\x7e\x8e\xff\x8a\x1b\x0f\x28\xd9\x4a\xd0\x5e\x91\xfa\x30\xa0\x68\x68\x0c\x18\x65\x1a\xd2\x34\xad\x6e\xe2\xb4\xd1\x5c\x3b\xb5\x13\x68\x55\xe5\x7f\xdf\x9d\x9d\xf4\xc7\x28\x52\xa4\xa1\x3d\xec\xa5\xb2\x2f\xdf\xd9\xdf\x7d\x77\x9f\xbb\x5a\x41\x9e\x41\x7c\x69\xbf\xaa\x7c\x5e\x09\xa8\x6b\x76\x7c\x0c\x18\x8d\xef\x97\x05\x6d\x4f\x97\x1e\x32\x29\x21\x94\x42\x41\x7c\x91\x0b\x99\xda\x08\xde\xe3\x47\xc2\x5d\xf3\x99\xf0\x4b\x21\x6d\xb3\x32\x5c\x4d\x44\x0b\x6d\x70\x6e\xd3\x00\xd5\xce\x02\x8c\x28\x4d\x2e\x1e\x85\x05\x0e\x46\x3f\x41\x66\xf4\xcc\x73\xe0\x63\x29\x86\xc9\x54\xcc\x38\xe2\xe2\x75\xa8\xb9\x13\x38\x65\x6c\x91\x8d\x91\x3c\xf1\xbf\xd2\xfa\x97\x85\xaa\x80\xca\xe6\x6a\x02\xb9\x4a\xc5\xc2\xe1\x2e\x69\xd5\x64\xc7\x2c\xab\x54\xf2\x8f\x6b\x0d\xd3\x31\x3c\xdc\x9c\x9f\x62\x60\xa2\x0b\x6e\xf8\x4c\xe6\xb6\x5c\xa7\x97\xc6\xf5\x20\x82\xf0\xed\x16\xaf\x1e\x08\x63\xb4\x89\x60\xc5\x82\x47\x6e\x68\xe7\x23\x8c\x05\x58\xad\x9d\x4b\xc0\xde\x99\x25\x0b\x12\xad\xf0\x34\x0c\xd8\xd2\x40\x1f\x46\xc3\xc1\xd5\xe0\xec\x1e\x46\xf0\x8e\x05\xc1\x08\x8f\x4c\xb4\x54\x58\x84\x6d\x84\xdc\xd0\x6e\x31\x17\x77\x37\x9f\x3b\x69\xdf\xe0\xbf\x7d\x1c\xdc\x0d\x60\xeb\x64\xc7\x64\x5d\xd0\x01\x7c\xb8\x3e\xc7\xdf\xba\x1e\x21\x59\x84\xd9\xa9\x36\x25\x01\xd7\xd5\xc1\x49\x7f\xbb\x09\x2b\x82\x1d\xb9\xa9\xf4\x14\x6f\x4d\x3e\xe3\x66\xf9\x49\x2c\x5b\x59\xf1\xde\x9f\x62\x81\xba\xd9\x13\xa7\x58\xcf\x9d\x4c\x02\x1f\xd1\xc7\xda\xcb\x62\x2a\xd5\xca\xf2\x70\x73\xa5\x27\xa1\x97\xe5\x05\xe5\x33\xee\x3b\x1a\xb1\x80\xe4\xed\x43\x3a\x8e\xbf\x50\xf6\x9d\x7e\xea\x98\x19\x0f\x13\xae\x42\x44\x65\xf4\x61\x9f\xcc\x61\x61\x72\x55\xc2\xc1\xe1\x01\x84\x7f\x08\x11\x45\xfe\x72\xac\x9b\xee\x7f\xd3\x07\x95\x4b\x6a\x78\x80\xee\xa8\x8c\xa2\xad\x9b\x03\x5f\x5f\x13\x3c\xdc\xab\x68\x8f\xc0\xac\x66\x9b\x39\x6d\x4d\x7d\x2b\x2b\xc3\x65\x3b\xea\xed\x3c\x6f\x19\x10\xed\x67\x3b\xfb\x0f\xf9\xf0\x64\xfa\x6a\x2e\xdc\x4f\xae\xb3\x63\xbe\xff\xf8\x2f\x3d\xf3\x37\x93\x3c\x77\x2a\x90\xc1\xda\x69\xee\x9c\xda\x69\x0e\x83\x54\x64\xc2\xc0\x3c\x3e\x93\xda\x8a\x30\xf2\x74\xa5\xe6\x29\x8e\x94\xad\x64\x69\x69\x52\x2d\x11\xd8\xed\xce\x0a\x73\x33\x4d\x99\xd7\x62\x51\x86\xae\x4b\x5d\x5f\x87\x2e\xcf\xc3\xb3\xf7\x61\xe7\x81\x70\x0e\x72\x53\x80\x86\xc5\x95\x37\xfc\xfc\x55\xfc\xbb\x47\xb8\xe7\xca\x79\x02\xa4\x4c\x1f\x78\x51\x20\xb1\x10\x37\xbd\x17\xec\x1c\xed\x58\xde\x01\x37\xfe\x76\xff\x2a\x8c\xfd\x0e\x00\x00\xff\xff\x57\x6d\xe4\x58\xc8\x07\x00\x00"

func mysqlIdxGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mysqlIdxGoTpl,
		"mysql.idx.go.tpl",
	)
}

func mysqlIdxGoTpl() (*asset, error) {
	bytes, err := mysqlIdxGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql.idx.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysqlModelGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x57\x51\x93\xda\x36\x10\x7e\xc6\xbf\x62\x73\x2f\xb5\x5b\xe2\xbc\x67\xe6\xa6\x93\xf6\x9c\x29\x53\x0a\x99\x83\x6b\xf3\x76\x08\xbc\x1c\x9e\xd8\x12\x91\x04\x39\x86\xc9\x7f\xef\xae\x64\xbb\x06\x0c\x75\x2e\xb4\x2f\x87\x2d\xed\x7e\xfb\xed\x6a\xbf\x95\x6f\xbf\x7f\x0d\xd9\x12\xe2\x5f\x55\x51\xa0\xb4\xf0\xfa\xeb\xd7\xe0\xcd\x1b\xd8\xef\xff\x59\xa2\x15\xb6\xc2\xdc\x60\x73\x7b\xba\x5b\x23\xed\x81\xc6\xb5\x46\x43\x86\x06\x04\x68\xf5\x05\x96\x5a\x15\xde\x42\xcc\x73\x9c\x2c\x56\x58\x08\x32\x8c\xeb\xa5\x91\x28\xd8\x33\xf6\xb0\x32\xe5\x08\x96\xd1\x9a\xb0\xc6\xea\xcd\xc2\xc2\xde\x19\x69\x21\x9f\x10\xe2\xf7\x19\xe6\xa9\x61\xf3\x1e\x9b\xba\x57\xb6\xa5\x17\x8d\x0e\xa1\x72\xa7\x15\xce\x6a\x2a\x9e\x78\x7f\xe6\x43\xf3\x33\x3f\xfa\x90\x50\xa7\x99\x6f\x0a\x59\x72\x6a\x52\xaa\x4a\xf3\x41\x67\x85\xd0\xbb\xdf\x71\x57\x05\x0c\x82\x1e\x39\x3f\x2b\x58\x3a\x42\x41\xef\x11\x9f\x33\x63\x4d\x1f\x1e\x53\xcc\xd1\x62\x0a\x73\xa5\xf2\xa0\x8e\x15\x90\x4b\x49\xa9\x05\x8d\xb0\x12\xe7\x0f\x29\xf9\xea\x22\x93\x68\xd8\xd6\xae\x0e\x4b\xe2\x83\x40\x26\xdd\x4e\x2a\xac\x98\x0b\x83\x71\xb0\xdc\xc8\x05\x84\x64\x69\x56\x4a\x5b\xc9\x99\xd4\x3e\x3f\x36\x00\xa2\x32\x4c\x18\x39\x7a\x54\xdb\x1e\x95\x6d\xa3\x25\xb4\xfa\xc6\x65\x56\x4c\x9e\x28\xde\x95\x99\xad\xb5\xda\x66\x29\x33\x94\x4b\xa5\x0b\x61\x33\x25\xdb\xd8\xae\x84\x81\x39\xa2\x84\xaa\x24\xae\x2f\x5e\xca\xbc\x8c\xde\x99\x7a\x19\xb4\xe4\x3e\x90\x06\xb5\x25\xc6\xfc\x63\x4e\xa8\x5a\xf5\x62\x5e\x1e\x39\x4c\xe7\xf0\x71\x7c\xf7\x4b\x04\xa8\xb5\xd2\x4c\x6f\x2b\x34\xbf\xf8\x05\xdf\x30\x54\x24\x91\x6b\x14\xe9\xce\x1f\x65\x1f\xe6\x22\xcb\x83\x1e\xad\x5f\x3c\x00\x86\xab\xd2\x75\x70\x26\x1e\xe1\x97\xf0\xc6\xa7\x03\x4b\x02\xc1\xf4\xed\x21\xb6\xb9\x89\x82\x5e\xd9\xa8\xe6\x73\x0e\x9f\x37\xa8\x77\x41\x6f\xa1\xa4\xb1\xbc\x40\xf2\x82\x5b\x98\x0d\x46\x93\xe4\x7e\x0a\x83\xd1\x74\xdc\x45\xb2\x10\xce\xe0\x27\x22\xc3\x2a\x5a\xa8\x9c\xd9\x9a\x5a\x96\x2d\xad\x5d\x5a\x47\xf0\xe7\xbb\xe1\x43\x32\x39\x72\xdf\x8a\xbc\x93\xf7\xcc\xa7\xa1\x37\xb2\x4a\xe3\xe3\x78\xa8\x9e\x42\x9f\x46\x9f\x89\x3b\x21\x1e\xd2\x09\x8f\x0a\x1a\xb5\x85\x88\xb8\x8f\x48\xb7\x7c\x52\x6f\x6f\x21\x9d\xc7\xc9\x33\x2e\xae\x84\x4c\xe7\xca\xb8\xaf\x6e\x41\x66\xf9\xd1\x21\xd6\x87\x43\x4b\x3a\xc3\x2d\x42\x96\x92\x47\x5a\x53\x21\x5a\xf1\x50\x18\xeb\x1b\x6c\x40\x9d\xdf\x11\xd0\xa0\x25\x8d\x3a\x3a\xf0\x09\x77\x20\x68\x02\xb9\x96\x40\xb9\x40\x37\x38\x5b\x3a\x8d\x0f\xfa\x34\x07\xea\x90\xc3\x8d\xd2\x3c\xcc\xd2\xe8\x1c\x52\xd5\xb3\xb7\x40\x03\x1c\x83\x5a\xa7\xc4\xb8\x14\xe3\xc3\x9a\x84\x86\xb0\x71\x3f\xa7\x62\xfc\x8e\xf1\xe6\x91\x3b\x8b\x31\x55\x68\xe4\x0f\xf6\x44\x8c\xaf\x5e\xa4\x46\x9f\x4f\xad\x46\x06\x07\xa9\x4a\xf4\x86\x1a\x39\xb0\x1f\x4e\xff\xae\xff\x6a\x74\x76\x0b\x49\x87\xf4\x89\xe7\x2c\xe5\xec\x1c\x69\x30\x77\x9b\x02\x0f\x1f\xee\xde\x4d\x93\x4e\x03\x60\x92\x4c\xe1\x74\x06\x38\xdc\x5a\x1f\x37\x7d\xb8\xb9\xa0\x67\xf8\xeb\xb7\xe4\x3e\x39\xea\x2c\xdf\x6d\x3f\xff\x87\x52\xef\x9f\x29\x72\x7b\xeb\x53\xdd\x1e\xbd\x16\xaf\x3a\x15\xbe\x99\x44\x43\xe0\x5e\x3d\x13\x41\xb3\xc2\xd0\x9f\xab\x5e\x63\x8c\xda\xa2\x9b\xb3\x9d\x59\x7f\x48\x34\x3a\xb3\xdd\xb2\xd6\x64\xd9\x89\x17\x8d\xeb\xdb\x34\x3a\xf8\xe8\x28\x05\x73\x9a\xf1\x15\x3e\x29\xfe\xc7\x69\xc1\x23\xf0\x4a\x53\xa0\x09\x75\x41\xd8\x77\xc9\x30\x21\x61\xbf\xbf\x1f\xff\xd1\x49\xdd\xdf\xa7\xcc\x6b\x89\xeb\x5b\x70\x3a\x5f\x89\xd5\x07\xe1\xb9\x6b\xab\x2a\x72\xfb\xbd\xd5\xf8\xb7\x20\xf8\x3b\x00\x00\xff\xff\x4f\xb1\x3d\x00\x33\x0d\x00\x00"

func mysqlModelGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mysqlModelGoTpl,
		"mysql.model.go.tpl",
	)
}

func mysqlModelGoTpl() (*asset, error) {
	bytes, err := mysqlModelGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql.model.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysqlProcGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x90\xb1\x6e\x32\x31\x10\x84\x6b\xfb\x29\xf6\x6f\x7e\x2e\x12\x3a\x9e\x80\x26\x09\x1d\x02\x02\x14\x94\x18\xdf\x02\x27\x19\x1b\xd6\x36\x11\x42\xbc\x7b\x76\xef\x38\x89\x28\x4a\x94\x54\x96\xc7\xeb\x99\x6f\x76\x30\x80\xeb\x15\xca\x89\x39\x20\xdc\x6e\x60\x8d\x73\x11\xd2\x1e\x21\xa6\x40\x58\xc1\x91\x82\xc5\x2a\x13\x42\x4f\xe6\x96\x66\xe3\x70\x61\xf7\x78\x30\x3c\x5e\x8a\x34\xe3\x89\xfb\xf7\xa2\xbb\xcf\x0c\xb1\x92\x90\x96\x97\x23\x46\x7e\x79\x82\xee\x69\x8e\x29\x93\x17\x9d\xe5\x1e\x04\x0f\xd5\xa6\xd4\xdb\xec\xed\x23\x48\x51\x6d\x60\x35\x7d\x7d\x66\x69\x17\x8e\xe2\xe6\xea\x98\xd8\xa1\x33\x66\x48\xca\xd8\x38\x4b\x2a\x61\x12\xc7\xf2\x93\x7b\x1f\x90\x28\x10\x67\x6b\x75\x36\x24\xb7\x56\xd1\x5a\x71\xef\x78\x72\x70\xca\x48\x17\xad\x6c\xf0\xec\xce\x42\x4c\x04\x43\x58\x2f\x46\xe3\xd1\xcb\x12\x7e\xd7\xd8\x06\x77\x36\xbc\xb5\x47\x38\xe6\x5a\xb7\x29\x94\x7d\x97\x22\x0c\x0c\x0a\xdf\xf1\x6a\xb5\x9a\x8e\xc3\xae\x68\x39\x7e\xa8\xbe\xe5\xb8\xa6\xbb\x56\xd2\x69\x28\x2b\x7c\x93\x8c\x79\x78\xff\xc3\xef\x72\x61\x8d\x2f\xfe\x33\x0b\x1b\xd5\xdb\x66\x3f\xff\x86\xe0\x6b\x27\x1b\x53\xd4\xb0\xb5\xb4\xac\xb5\xc0\x93\xda\x7d\xdd\xb1\x56\x37\x2e\x7b\x9f\xe7\xa3\x2f\x1e\x9a\xb5\x8f\x00\x00\x00\xff\xff\x27\x8b\xc3\xe9\x5e\x02\x00\x00"

func mysqlProcGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mysqlProcGoTpl,
		"mysql.proc.go.tpl",
	)
}

func mysqlProcGoTpl() (*asset, error) {
	bytes, err := mysqlProcGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql.proc.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mysqlQueryGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x53\x4d\x6b\xdc\x30\x10\x3d\xcb\xbf\x62\x1a\x4c\x90\x5b\xc7\xb9\x07\x7c\x69\x4a\x4f\x25\xdb\xaf\x43\x20\x04\xaa\x5d\xcb\x5b\x81\x56\x5a\x4b\x72\x9b\xc5\xe4\xbf\x77\x46\xda\xf5\xda\xf9\x80\xb0\xf4\x26\x3d\xcd\x68\xe6\xbd\x37\x33\x0c\x90\x7f\xeb\xa5\xdb\x5d\xdb\xcd\x46\x9a\xe0\xe1\xaa\x86\x6a\x8e\x3c\x3e\x66\xc3\x70\x01\xaa\x85\x6a\x8f\xc1\x05\x62\x97\x97\x80\xd9\x23\xb4\x8f\x92\xda\xcb\xe9\xf3\x8d\xd8\x48\x7c\x03\xd7\x1b\x0f\x02\x56\xbd\x0f\x76\x03\x1d\x15\x28\xc1\xc9\xd0\x3b\xa3\xcc\x1a\x4f\xbe\xd7\x58\x4b\xf8\x98\xf5\x73\xb7\xa5\xac\x2a\x7d\x69\x1a\xfa\xbd\xed\xcd\x6a\xf6\x25\x6f\x96\x70\xbb\xf8\xf4\x11\x31\x27\xcc\x5a\x42\xf5\x55\x38\x7c\x0b\xd2\x51\xd3\xe5\x2c\x78\xf2\x2b\x1e\xd3\x97\x05\x70\x3c\x23\x2f\x63\x03\x54\x0b\xa3\x77\x0b\x43\x01\x77\xf7\x63\xc8\xfb\x49\x5e\x09\xd2\x39\xeb\x0a\x18\x32\xf6\x47\x38\xba\x25\x24\xcb\x18\xb2\xf5\x9d\x4e\xbc\x32\xb6\xb2\xc6\x07\x02\x7c\x70\x50\xc3\xd8\x60\xae\x4a\xc8\xf5\x51\xe2\xd4\x0c\x36\x90\x2b\xea\xf1\xc3\x58\x36\xa1\x5c\x99\x46\x3e\x3c\x35\x28\x57\x05\x05\x27\x7d\x5f\x89\x98\xb2\x9c\x54\xc8\xd8\x30\x10\x88\xfe\xfc\x22\xe7\x35\xa4\xc3\x5e\xe1\x48\x03\x8d\x3a\xd0\xb8\x5d\x7c\xb1\x6b\x9e\x68\xbc\x45\xe4\xa3\xb0\xe3\xc0\x1c\x45\x4d\x9a\x61\x88\xff\x6d\x5d\x30\x94\x71\x10\x76\x6a\x4e\xc6\x48\xd6\x1a\x9a\x65\x92\xe8\xbb\xfd\x7b\x52\x07\xd5\x8f\x95\x30\x64\x6f\xab\xa4\x6e\xa8\x9c\xc7\x1a\x62\xa9\x65\xf5\x99\x10\x0f\x7c\xeb\x14\xce\xed\xd9\xf9\x19\xf0\x27\x3d\x15\x45\x24\xc1\x90\x01\x75\xf3\xae\x06\xa3\x34\xd9\xce\xd2\xc4\xd2\x35\x4e\x43\xc6\x48\xb5\x3d\x78\xfe\x22\xb9\x92\x82\x8f\xab\x41\x0c\xbb\x98\x4b\x63\x70\x60\x79\x9a\xc8\x6f\xeb\x8f\x35\xb2\x95\x0e\xba\xea\x5a\x5b\x2f\x79\x91\x6c\xd6\x56\x34\x87\xad\x23\x06\x71\xf1\xef\xee\xa7\xf3\x3e\x60\x6e\x6b\x29\xf3\x46\x3e\x04\x1e\xe7\x9e\x3d\xe7\x88\xfe\x5d\xd5\x30\xcf\xc3\x40\xda\x08\xb4\x00\x4f\xc9\xd0\xee\xbf\x38\xf2\x02\xe5\xe7\x9c\xa3\x29\x91\x53\x0d\x62\xbb\x45\xb9\x38\x5e\xca\x57\x0c\x2a\x66\x26\xc6\xc0\xd1\xb1\xb4\x17\xf8\xfc\x2f\x00\x00\xff\xff\xb1\x08\xf9\x2b\x28\x05\x00\x00"

func mysqlQueryGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mysqlQueryGoTpl,
		"mysql.query.go.tpl",
	)
}

func mysqlQueryGoTpl() (*asset, error) {
	bytes, err := mysqlQueryGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mysql.query.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresEnumGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x93\x41\x8f\xd3\x30\x10\x85\xcf\xf1\xaf\x18\x7a\x69\xbc\xea\xba\xe2\xc2\x61\xa5\x9e\x10\x47\xb8\xec\xc2\x05\x71\x70\x13\x7b\x6b\xd1\x38\x60\x3b\x5d\x56\x51\xfe\x3b\xe3\xd8\xa6\x4e\x49\x2a\xe8\xa5\x6a\x26\xe3\x37\x5f\xde\x1b\x6f\xb7\xd0\xf7\xc0\x9e\x5e\x7f\x08\x18\x06\x50\x16\xdc\x41\xc0\xda\xd7\x3e\xe8\xae\x89\xf5\x35\x08\x7c\x00\x87\x4f\x8c\xf8\xdf\xc9\xa1\x4e\x69\xf7\xf6\x1d\x21\x55\xab\xad\x83\x92\xf4\xfd\x3d\x18\xae\x9f\x05\xb0\x2f\xfc\xd8\x09\x8b\x4d\xa4\x88\x93\xc6\x0a\x16\x66\xa6\x5e\x0c\x05\xd9\x9a\x33\x49\x3a\xb7\x66\xa4\x58\xd2\xd9\xe5\x58\xa5\xff\xff\xde\x23\xa5\x56\x8a\x64\xf8\x21\x35\xdc\x23\x0f\x25\x04\x89\x1e\x9d\x51\xfa\x19\x8c\x70\x9d\xd1\x81\xc2\x86\xd2\x69\x3c\xd4\xca\x3f\x64\x51\x96\x11\xd9\xe9\x0a\xbc\xba\x3d\xb4\xc6\x69\xde\x88\x33\x41\xd6\x48\xa3\x78\x49\x93\x64\x4f\x8a\x13\x37\xa3\x95\x88\x14\xab\x84\x14\xf6\x45\xb9\xea\x00\x0b\x8a\x0b\x76\x56\xdc\x8a\x25\x43\x1f\x48\x51\xa4\x29\x3b\x58\x5d\x5a\xb8\xca\x7d\x28\x06\x24\x08\xdf\x9f\xc8\xc8\x30\x7a\xf3\x91\x1b\x7b\xe0\xc7\x27\xf1\xcb\x41\x13\xfe\xdb\xe9\xb2\x68\xd7\x82\xc3\xd7\xff\xe1\x49\x26\x8a\xc6\x94\x5f\xbf\xed\x5f\x9d\xd8\x80\x30\xa6\x35\xd4\x3b\x14\x51\xc2\x8b\x79\x45\x96\x8c\xa5\x1b\xd0\x2a\xe1\x7e\xd6\x4d\x06\xdc\xe9\x59\x64\x69\xda\xe6\x1f\x90\xef\x26\xcc\x13\xe5\xd2\x9f\x8e\x78\x34\x70\x7b\xec\x98\x61\xc8\x74\xec\xa1\xc5\xd5\xe8\xfe\x4e\xc5\xa7\x76\x37\xcf\xb3\x5b\x4a\x3a\x25\x39\xf8\x14\x6b\x21\x79\x77\x74\x5e\x27\x05\xea\xf1\x2c\xfb\x24\x5e\xca\x95\xd2\xb8\xd2\xaa\xce\xed\x58\xd1\x49\xfc\x67\x2f\xc3\x24\xcb\x9d\xb2\x52\x89\x78\x2f\x7e\x1e\xb7\xb5\x51\x27\x61\x02\x88\xf1\xf9\x0b\x23\x79\x25\xc6\x9b\x7a\xdb\x1d\x19\xa5\xfc\x26\xe4\xd2\x33\xfb\x70\x7d\x11\xf2\x3d\x78\xac\xb8\xbe\x40\xaf\xb9\xe3\x7b\x34\x7d\x8b\xdf\xc0\xfc\x7b\x7d\x3b\xfd\x74\x35\xbc\x58\x69\x4d\x75\x56\xeb\x87\x6c\x2b\xf6\x9d\xdc\x40\xfb\x1d\x1e\x76\x80\x4d\x2c\xae\x3b\xba\xae\x24\xbc\xc1\x3a\xb6\x00\xc0\x4d\x61\xcd\x1b\x32\x5d\x55\x1c\x4f\xbd\x2b\xbf\x03\x00\x00\xff\xff\x0e\x16\xf2\x15\xe5\x05\x00\x00"

func postgresEnumGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresEnumGoTpl,
		"postgres.enum.go.tpl",
	)
}

func postgresEnumGoTpl() (*asset, error) {
	bytes, err := postgresEnumGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.enum.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresFkeyGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x4f\xcb\x8a\x83\x30\x14\x5d\x4f\xbe\xe2\xee\xc6\x88\x24\xff\xe0\x0c\x33\x8b\x42\x0b\xa5\x8b\x6e\xad\x5e\x6b\x40\x93\x72\x13\x29\x22\xfe\x7b\x4d\x7c\x60\xa5\x90\xcd\xb9\xe7\x91\x73\xa4\x84\xbe\x07\x71\xe9\x1e\x08\xc3\x00\x84\xae\x25\x6d\xc1\x55\x18\xee\x67\x2c\x17\x2a\xb3\xd6\xe4\x2a\x73\x58\xc0\x53\xb9\x6a\x95\xcc\xfc\xb7\x0d\xe8\x4f\x61\x5d\x78\x79\xe4\xd1\x8f\xa9\xdb\x46\x1f\xb3\xc6\x2b\xb8\x60\x52\x8e\x0f\xfe\x51\x23\x85\xa0\x92\x4c\x33\xd9\x0c\xa1\xba\xeb\x03\x76\xb3\x58\xb0\xb2\xd5\x79\x48\xb1\x95\x21\xa7\xfd\x79\xad\x19\x6f\x3e\xe6\xbb\xa2\x51\x71\x83\xeb\xe9\x37\xe5\x10\xc5\xef\x4c\x02\x48\x64\x68\x34\xb0\xaf\x69\xe8\xce\x9a\x76\x33\x5e\x56\x8c\x59\x09\x7c\xac\x20\xb6\x63\x39\x1b\x18\x7b\x05\x00\x00\xff\xff\xdc\x08\x13\x0d\x4a\x01\x00\x00"

func postgresFkeyGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresFkeyGoTpl,
		"postgres.fkey.go.tpl",
	)
}

func postgresFkeyGoTpl() (*asset, error) {
	bytes, err := postgresFkeyGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.fkey.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresIdxGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x55\xdf\x4f\xdb\x30\x10\x7e\x8e\xff\x8a\x1b\x0f\x28\xd9\x4a\xd0\x5e\x91\xfa\x30\xa0\x68\x68\x0c\x18\x65\x1a\xd2\x34\xad\x6e\xe2\xb4\xd1\x5c\x3b\xb5\x13\x68\x55\xe5\x7f\xdf\x9d\x9d\xf4\xc7\x28\x52\xa4\xa1\x3d\xec\xa5\xb2\x2f\xdf\xd9\xdf\x7d\x77\x9f\xbb\x5a\x41\x9e\x41\x7c\x69\xbf\xaa\x7c\x5e\x09\xa8\x6b\x76\x7c\x0c\x18\x8d\xef\x97\x05\x6d\x4f\x97\x1e\x32\x29\x21\x94\x42\x41\x7c\x91\x0b\x99\xda\x08\xde\xe3\x47\xc2\x5d\xf3\x99\xf0\x4b\x21\x6d\xb3\x32\x5c\x4d\x44\x0b\x6d\x70\x6e\xd3\x00\xd5\xce\x02\x8c\x28\x4d\x2e\x1e\x85\x05\x0e\x46\x3f\x41\x66\xf4\xcc\x73\xe0\x63\x29\x86\xc9\x54\xcc\x38\xe2\xe2\x75\xa8\xb9\x13\x38\x65\x6c\x91\x8d\x91\x3c\xf1\xbf\xd2\xfa\x97\x85\xaa\x80\xca\xe6\x6a\x02\xb9\x4a\xc5\xc2\xe1\x2e\x69\xd5\x64\xc7\x2c\xab\x54\xf2\x8f\x6b\x0d\xd3\x31\x3c\xdc\x9c\x9f\x62\x60\xa2\x0b\x6e\xf8\x4c\xe6\xb6\x5c\xa7\x97\xc6\xf5\x20\x82\xf0\xed\x16\xaf\x1e\x08\x63\xb4\x89\x60\xc5\x82\x47\x6e\x68\xe7\x23\x8c\x05\x58\xad\x9d\x4b\xc0\xde\x99\x25\x0b\x12\xad\xf0\x34\x0c\xd8\xd2\x40\x1f\x46\xc3\xc1\xd5\xe0\xec\x1e\x46\xf0\x8e\x05\xc1\x08\x8f\x4c\xb4\x54\x58\x84\x6d\x84\xdc\xd0\x6e\x31\x17\x77\x37\x9f\x3b\x69\xdf\xe0\xbf\x7d\x1c\xdc\x0d\x60\xeb\x64\xc7\x64\x5d\xd0\x01\x7c\xb8\x3e\xc7\xdf\xba\x1e\x21\x59\x84\xd9\xa9\x36\x25\x01\xd7\xd5\xc1\x49\x7f\xbb\x09\x2b\x82\x1d\xb9\xa9\xf4\x14\x6f\x4d\x3e\xe3\x66\xf9\x49\x2c\x5b\x59\xf1\xde\x9f\x62\x81\xba\xd9\x13\xa7\x58\xcf\x9d\x4c\x02\x1f\xd1\xc7\xda\xcb\x62\x2a\xd5\xca\xf2\x70\x73\xa5\x27\xa1\x97\xe5\x05\xe5\x33\xee\x3b\x1a\xb1\x80\xe4\xed\x43\x3a\x8e\xbf\x50\xf6\x9d\x7e\xea\x98\x19\x0f\x13\xae\x42\x44\x65\xf4\x61\x9f\xcc\x61\x61\x72\x55\xc2\xc1\xe1\x01\x84\x7f\x08\x11\x45\xfe\x72\xac\x9b\xee\x7f\xd3\x07\x95\x4b\x6a\x78\x80\xee\xa8\x8c\xa2\xad\x9b\x03\x5f\x5f\x13\x3c\xdc\xab\x68\x8f\xc0\xac\x66\x9b\x39\x6d\x4d\x7d\x2b\x2b\xc3\x65\x3b\xea\xed\x3c\x6f\x19\x10\xed\x67\x3b\xfb\x0f\xf9\xf0\x64\xfa\x6a\x2e\xdc\x4f\xae\xb3\x63\xbe\xff\xf8\x2f\x3d\xf3\x37\x93\x3c\x77\x2a\x90\xc1\xda\x69\xee\x9c\xda\x69\x0e\x83\x54\x64\xc2\xc0\x3c\x3e\x93\xda\x8a\x30\xf2\x74\xa5\xe6\x29\x8e\x94\xad\x64\x69\x69\x52\x2d\x11\xd8\xed\xce\x0a\x73\x33\x4d\x99\xd7\x62\x51\x86\xae\x4b\x5d\x5f\x87\x2e\xcf\xc3\xb3\xf7\x61\xe7\x81\x70\x0e\x72\x53\x80\x86\xc5\x95\x37\xfc\xfc\x55\xfc\xbb\x47\xb8\xe7\xca\x79\x02\xa4\x4c\x1f\x78\x51\x20\xb1\x10\x37\xbd\x17\xec\x1c\xed\x58\xde\x01\x37\xfe\x76\xff\x2a\x8c\xfd\x0e\x00\x00\xff\xff\x57\x6d\xe4\x58\xc8\x07\x00\x00"

func postgresIdxGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresIdxGoTpl,
		"postgres.idx.go.tpl",
	)
}

func postgresIdxGoTpl() (*asset, error) {
	bytes, err := postgresIdxGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.idx.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresModelGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\x41\x73\xe2\x46\x13\x3d\xa3\x5f\xd1\xeb\xfa\xea\x0b\x64\x59\x6d\xe5\x90\x43\xb6\x8a\xc3\xc6\xc8\x09\x15\x22\xbc\x20\x12\xdf\xec\x41\x6a\x6c\x55\xa4\x19\x76\x46\xd8\xa6\xa8\xfd\xef\xe9\xd6\x48\xb2\x30\x32\xab\x25\xec\xe6\x92\x8b\x8d\x46\xdd\xaf\x5f\xcf\xf4\xeb\x1e\x6d\xb7\x6f\x20\x5e\x82\x7b\xae\xd2\x14\x65\x06\x6f\x3e\x7d\x72\xde\xbe\x85\xed\xf6\x69\x89\x56\xd8\x0a\x13\x83\xf5\xd7\xc1\x66\x85\xf4\x0e\x34\xae\x34\x1a\x32\x34\x20\x40\xab\x07\x58\x6a\x95\x5a\x0b\xb1\x48\x70\x16\xde\x61\x2a\xc8\xd0\xad\x96\x7c\x91\xb2\xa7\x6b\x61\x65\xc4\x11\x32\x46\xab\xc3\x9a\x4c\xaf\xc3\x0c\xb6\xb9\x91\x16\xf2\x16\xc1\xbd\x88\x31\x89\x0c\x9b\x77\xd8\x34\x7f\x64\x5b\x7a\xd0\x98\x23\x94\xee\xb4\xc2\x59\x05\xe2\x96\xdf\xdf\xd8\xd0\xfc\x9b\x7f\xda\x90\x50\xa5\x99\xac\x53\x59\x70\xaa\x53\x2a\xb7\xe6\x52\xc7\xa9\xd0\x9b\xdf\x70\x53\x06\x74\x9c\x0e\x39\x3f\x2a\x58\xe6\x84\x9c\xce\x35\x3e\xc6\x26\x33\x7d\xb8\x8e\x30\xc1\x0c\x23\x58\x28\x95\x38\x55\x2c\x87\x5c\x0a\x4a\x0d\x68\x84\xe5\xe5\xfe\x10\x91\xaf\x4e\x63\x89\x86\x6d\xb3\xbb\xdd\x2d\xb1\x41\x20\x96\xf9\x9b\x48\x64\x62\x21\x0c\xba\xce\x72\x2d\x43\xe8\x92\xa5\xb9\x53\x3a\x93\x9c\x49\xe5\xf3\x7d\x0d\xa0\x57\x84\xe9\xf6\x72\x7a\xb4\xb7\x1d\xda\xb6\xb5\x96\xd0\xe8\xeb\x16\x59\x31\x79\xa2\x38\x2c\x32\x5b\x69\x75\x1f\x47\xcc\x50\x2e\x95\x4e\x45\x16\x2b\xd9\xc4\xf6\x4e\x18\x58\x20\x4a\x28\xb7\x24\xaf\x8b\x63\x99\x17\xd1\x5b\x53\x2f\x82\x16\xdc\x47\xd2\xa0\xce\x88\x31\xff\x33\x7b\x54\x33\x75\x34\x2f\x8b\xdc\x8d\x16\x70\x35\x19\xfe\xdc\x03\xd4\x5a\x69\xa6\x77\x2f\x34\x3f\xd8\x05\x5b\x30\xb4\x49\x22\xd1\x28\xa2\x8d\x3d\xca\x3e\x2c\x44\x9c\x38\x1d\x5a\x3f\x78\x00\x0c\x57\xa6\x9b\xc3\x19\xd7\xc7\x87\xee\x99\x4d\x07\x96\x04\x82\xd1\xbb\x5d\x6c\x73\xd6\x73\x3a\x45\xa1\x9a\x8f\x09\x7c\x5c\xa3\xde\x38\x9d\x50\x49\x93\xf1\x02\xc9\x0b\x06\x70\x33\xf2\x67\xde\x34\x80\x91\x1f\x4c\xda\x48\x16\xba\x37\xf0\x9a\xc8\xb0\x8a\x42\x95\x30\x5b\x53\xc9\xb2\xa1\xb4\x0b\xeb\x1e\xfc\xf1\x7e\x3c\xf7\x66\xcf\xdc\xef\x45\xd2\xce\x7b\xea\x05\xf3\xa9\x3f\xf2\x7f\xc9\x39\x3e\x19\xb2\x8d\x4d\x51\xaf\x65\x99\xe2\xd5\x64\xac\x6e\xbb\x36\xc5\x3e\x3b\xe4\x22\xdd\xa5\xda\x7d\xb6\xd9\xbd\xa6\xf0\xb4\x81\x7c\x80\x03\x88\x16\xee\x07\xc6\x9e\xaa\x87\x93\xe0\xba\xb3\x50\xc8\xee\xff\x9b\xcf\x7c\x37\xc3\x1a\x17\xaa\x12\xa6\xf3\x6a\x00\x32\x4e\x9e\x95\xc4\xd3\x51\x63\x66\xcf\x1f\x65\x88\x79\x97\x3c\x50\x56\x03\xa0\x1e\x8b\x4e\x25\x25\xc2\x2d\xf4\x32\x5f\x91\x16\x10\xd6\xf9\xbf\x7d\xbd\xfc\x83\x0e\x64\x91\x5b\xeb\x25\x52\x68\xe4\x77\xd9\x9e\x5e\x5e\x1d\x25\x18\x9b\x4f\x25\x18\x06\x07\xa9\x0a\xf4\x9a\x60\x38\xb0\xed\x1f\x9f\x97\x68\xd9\xdd\xda\x85\xa4\x63\xfd\x8b\x5b\x21\xe5\x9c\x3b\x52\xef\x6c\x27\xd4\xf9\xe5\xf0\x7d\xe0\xb5\xd2\xe8\xcc\x0b\x8e\xd6\xe9\x00\xba\x70\x9c\x46\xff\xfc\xd5\x9b\x7a\xfb\xfa\x24\xc4\xff\x59\xa4\x50\xad\xe9\x32\x71\x08\xea\xeb\x49\xb9\xff\xc2\xe9\xbd\x28\xb6\xeb\x3e\x54\xda\xf7\x1e\x31\xfc\x57\x48\xd4\xf4\x6d\x65\x39\x13\xf7\x08\x86\xfe\x9c\x74\x84\x31\x6a\x83\x20\x5f\x2c\xf9\xea\x12\x51\x2b\xf9\x66\xcb\x4a\xec\x45\x89\x1f\x34\xae\x26\x69\xaf\x6a\x42\xf9\x78\x5b\xa1\xe6\x7b\x06\xdd\x2e\x25\x35\x24\x3b\xf1\x98\xe1\x53\x0a\x2e\x59\xb3\x83\x3f\x09\xbc\x77\x70\xa9\x4c\x76\xab\x71\xf6\x61\x0c\x3f\xb9\x3f\xbe\x06\x25\x93\xcd\x17\x35\xa8\xff\x06\x7a\x75\xcf\xfe\x82\xf9\x5d\x33\x9e\xf8\x70\x3e\xf1\x2f\xc6\xa3\xf3\x20\xdf\xf3\xdd\x8e\x40\x77\xb9\x09\x14\xed\xec\x73\xad\x6a\xb7\x33\xed\x18\xd2\x47\xc7\x32\x7e\xdc\x35\x3f\xf3\xae\xce\xc7\xf3\xa1\x37\x3c\xab\x79\x9e\xaa\xad\x9c\xa6\x2f\x7c\xf3\x51\x6e\x2f\xce\xc5\x3c\xdb\xef\x1b\x27\xb8\x94\x7f\xc3\x61\xce\x69\x9d\x68\x48\xd7\xa1\x0e\xe8\x69\xe8\x8d\x3d\x2a\xd4\x8b\xe9\xe4\xf7\x56\x7a\x3a\x30\x06\x7f\x68\x51\x89\xa7\x9a\x51\x5f\xe5\x62\x59\x7e\x53\xbd\x54\x8b\xe5\x2e\x37\x17\x63\xed\xcb\xda\xf9\x3b\x00\x00\xff\xff\x18\x46\xdb\x3a\x76\x10\x00\x00"

func postgresModelGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresModelGoTpl,
		"postgres.model.go.tpl",
	)
}

func postgresModelGoTpl() (*asset, error) {
	bytes, err := postgresModelGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.model.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresProcGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x90\xb1\x6e\x32\x31\x10\x84\x6b\xfb\x29\xf6\x6f\x7e\x2e\x12\x3a\x9e\x80\x26\x09\x1d\x02\x02\x14\x94\x18\xdf\x02\x27\x19\x1b\xd6\x36\x11\x42\xbc\x7b\x76\xef\x38\x89\x28\x4a\x94\x54\x96\xc7\xeb\x99\x6f\x76\x30\x80\xeb\x15\xca\x89\x39\x20\xdc\x6e\x60\x8d\x73\x11\xd2\x1e\x21\xa6\x40\x58\xc1\x91\x82\xc5\x2a\x13\x42\x4f\xe6\x96\x66\xe3\x70\x61\xf7\x78\x30\x3c\x5e\x8a\x34\xe3\x89\xfb\xf7\xa2\xbb\xcf\x0c\xb1\x92\x90\x96\x97\x23\x46\x7e\x79\x82\xee\x69\x8e\x29\x93\x17\x9d\xe5\x1e\x04\x0f\xd5\xa6\xd4\xdb\xec\xed\x23\x48\x51\x6d\x60\x35\x7d\x7d\x66\x69\x17\x8e\xe2\xe6\xea\x98\xd8\xa1\x33\x66\x48\xca\xd8\x38\x4b\x2a\x61\x12\xc7\xf2\x93\x7b\x1f\x90\x28\x10\x67\x6b\x75\x36\x24\xb7\x56\xd1\x5a\x71\xef\x78\x72\x70\xca\x48\x17\xad\x6c\xf0\xec\xce\x42\x4c\x04\x43\x58\x2f\x46\xe3\xd1\xcb\x12\x7e\xd7\xd8\x06\x77\x36\xbc\xb5\x47\x38\xe6\x5a\xb7\x29\x94\x7d\x97\x22\x0c\x0c\x0a\xdf\xf1\x6a\xb5\x9a\x8e\xc3\xae\x68\x39\x7e\xa8\xbe\xe5\xb8\xa6\xbb\x56\xd2\x69\x28\x2b\x7c\x93\x8c\x79\x78\xff\xc3\xef\x72\x61\x8d\x2f\xfe\x33\x0b\x1b\xd5\xdb\x66\x3f\xff\x86\xe0\x6b\x27\x1b\x53\xd4\xb0\xb5\xb4\xac\xb5\xc0\x93\xda\x7d\xdd\xb1\x56\x37\x2e\x7b\x9f\xe7\xa3\x2f\x1e\x9a\xb5\x8f\x00\x00\x00\xff\xff\x27\x8b\xc3\xe9\x5e\x02\x00\x00"

func postgresProcGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresProcGoTpl,
		"postgres.proc.go.tpl",
	)
}

func postgresProcGoTpl() (*asset, error) {
	bytes, err := postgresProcGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.proc.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresQueryGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x53\x4d\x6b\xdc\x30\x10\x3d\xcb\xbf\x62\x1a\x4c\x90\x5b\xc7\xb9\x07\x7c\x69\x4a\x4f\x25\xdb\xaf\x43\x20\x04\xaa\x5d\xcb\x5b\x81\x56\x5a\x4b\x72\x9b\xc5\xe4\xbf\x77\x46\xda\xf5\xda\xf9\x80\xb0\xf4\x26\x3d\xcd\x68\xe6\xbd\x37\x33\x0c\x90\x7f\xeb\xa5\xdb\x5d\xdb\xcd\x46\x9a\xe0\xe1\xaa\x86\x6a\x8e\x3c\x3e\x66\xc3\x70\x01\xaa\x85\x6a\x8f\xc1\x05\x62\x97\x97\x80\xd9\x23\xb4\x8f\x92\xda\xcb\xe9\xf3\x8d\xd8\x48\x7c\x03\xd7\x1b\x0f\x02\x56\xbd\x0f\x76\x03\x1d\x15\x28\xc1\xc9\xd0\x3b\xa3\xcc\x1a\x4f\xbe\xd7\x58\x4b\xf8\x98\xf5\x73\xb7\xa5\xac\x2a\x7d\x69\x1a\xfa\xbd\xed\xcd\x6a\xf6\x25\x6f\x96\x70\xbb\xf8\xf4\x11\x31\x27\xcc\x5a\x42\xf5\x55\x38\x7c\x0b\xd2\x51\xd3\xe5\x2c\x78\xf2\x2b\x1e\xd3\x97\x05\x70\x3c\x23\x2f\x63\x03\x54\x0b\xa3\x77\x0b\x43\x01\x77\xf7\x63\xc8\xfb\x49\x5e\x09\xd2\x39\xeb\x0a\x18\x32\xf6\x47\x38\xba\x25\x24\xcb\x18\xb2\xf5\x9d\x4e\xbc\x32\xb6\xb2\xc6\x07\x02\x7c\x70\x50\xc3\xd8\x60\xae\x4a\xc8\xf5\x51\xe2\xd4\x0c\x36\x90\x2b\xea\xf1\xc3\x58\x36\xa1\x5c\x99\x46\x3e\x3c\x35\x28\x57\x05\x05\x27\x7d\x5f\x89\x98\xb2\x9c\x54\xc8\xd8\x30\x10\x88\xfe\xfc\x22\xe7\x35\xa4\xc3\x5e\xe1\x48\x03\x8d\x3a\xd0\xb8\x5d\x7c\xb1\x6b\x9e\x68\xbc\x45\xe4\xa3\xb0\xe3\xc0\x1c\x45\x4d\x9a\x61\x88\xff\x6d\x5d\x30\x94\x71\x10\x76\x6a\x4e\xc6\x48\xd6\x1a\x9a\x65\x92\xe8\xbb\xfd\x7b\x52\x07\xd5\x8f\x95\x30\x64\x6f\xab\xa4\x6e\xa8\x9c\xc7\x1a\x62\xa9\x65\xf5\x99\x10\x0f\x7c\xeb\x14\xce\xed\xd9\xf9\x19\xf0\x27\x3d\x15\x45\x24\xc1\x90\x01\x75\xf3\xae\x06\xa3\x34\xd9\xce\xd2\xc4\xd2\x35\x4e\x43\xc6\x48\xb5\x3d\x78\xfe\x22\xb9\x92\x82\x8f\xab\x41\x0c\xbb\x98\x4b\x63\x70\x60\x79\x9a\xc8\x6f\xeb\x8f\x35\xb2\x95\x0e\xba\xea\x5a\x5b\x2f\x79\x91\x6c\xd6\x56\x34\x87\xad\x23\x06\x71\xf1\xef\xee\xa7\xf3\x3e\x60\x6e\x6b\x29\xf3\x46\x3e\x04\x1e\xe7\x9e\x3d\xe7\x88\xfe\x5d\xd5\x30\xcf\xc3\x40\xda\x08\xb4\x00\x4f\xc9\xd0\xee\xbf\x38\xf2\x02\xe5\xe7\x9c\xa3\x29\x91\x53\x0d\x62\xbb\x45\xb9\x38\x5e\xca\x57\x0c\x2a\x66\x26\xc6\xc0\xd1\xb1\xb4\x17\xf8\xfc\x2f\x00\x00\xff\xff\xb1\x08\xf9\x2b\x28\x05\x00\x00"

func postgresQueryGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresQueryGoTpl,
		"postgres.query.go.tpl",
	)
}

func postgresQueryGoTpl() (*asset, error) {
	bytes, err := postgresQueryGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.query.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _xo_dbGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x54\x5d\x6f\xeb\x36\x0c\x7d\x8e\x7f\x05\x6b\x6c\x80\xdd\xf9\xba\xeb\x1e\x0b\xe4\x61\x1f\xf7\x65\xd8\x67\x7b\x31\x0c\x48\x32\x44\x71\xe8\x44\xa8\x2d\xb9\x92\xec\x36\x08\xf2\xdf\x47\x4a\xb6\x6b\xf7\xde\xde\x17\xc3\xa2\x78\x0e\xc9\x43\x8a\x37\x37\xf0\xef\x9f\xbf\xfc\x04\xd2\x82\x3b\x22\x14\xba\xae\xb5\x02\xa9\x1c\x9a\x52\x14\x08\xa5\x36\xb0\x17\x4e\xec\x84\x45\xd0\x0d\x1a\xe1\xa4\x56\xec\x2c\x1c\x14\x42\xc1\x0e\xa1\xb5\xb8\x87\x67\xe9\x8e\x11\xb1\xb9\x53\x83\x16\x4a\xa3\x6b\x38\x9f\x21\x7f\x28\x8e\x58\x0b\xb8\x5c\x72\xba\xe4\xfb\x4f\x47\x0a\x65\x8f\xba\xad\x08\xa3\xcd\xa3\x07\x8e\x21\x6e\xec\x53\x95\x53\x3a\x42\xed\xe7\xb6\x4f\x2f\x79\xc4\xd4\x7d\xb6\x63\x7e\xe7\x68\xf1\xf1\x05\x8b\xc4\x3a\x23\xd5\x21\x83\x3c\xcf\xc7\xcb\xf3\x25\x85\x84\xc1\xf7\x68\xdb\xca\x65\x80\xc6\x68\x93\x46\x8b\xbf\x5b\x34\xa7\xf7\x21\xd7\x1e\xa3\x9f\xed\x1b\x04\x99\xde\x05\x0d\x98\xe8\x12\x45\x5e\xd3\xdf\xf4\x01\x1a\xa3\x3b\xb9\xc7\x20\x6d\x45\x86\xb2\x55\x45\x90\x6b\x77\x82\x03\x2a\x96\x93\x0e\x4f\xc4\x2e\xd1\xe6\x51\x27\x4c\x0f\x5d\x7a\xdf\x77\xc3\x9d\x21\xc4\x79\xa0\x16\x10\xcb\x3f\xa2\x22\x8a\xaf\x36\x31\xf4\xc5\xb7\x4d\xd6\x4d\x85\x35\x2a\x07\x3b\x4d\xda\x13\x84\xa9\x66\x72\xf7\xbc\xbe\x0f\x74\xbe\xd9\x1b\xd9\xa1\xc9\x87\x38\x03\xb3\xed\x9b\xf2\x26\x8d\x69\x77\x26\x6c\xd1\x62\x46\xd3\x4b\xf5\xe0\x4b\x7c\xa8\x24\xf9\x53\x01\x02\xac\xff\xd5\x25\x84\xe2\xc7\x18\x13\xbf\xd5\x26\xdc\x79\x82\xa7\x56\x3b\xfc\x68\x0b\xd1\xe0\x3d\x1e\xf0\x65\x90\xc1\xf8\x83\xd3\x50\x0b\x57\x1c\x01\xbd\xc7\x1e\x8a\xa3\x30\xa2\xa0\x0c\x2d\x25\xca\xe1\x3c\x53\xd0\xfe\x33\xaa\x65\x60\x69\xf2\xdf\x5b\xeb\x7e\xd6\x75\x23\x2b\x4c\xb6\xc9\xea\xbf\xf5\x7a\x93\xac\xe8\x73\xfe\xe1\x92\x5e\xa7\xeb\x75\xbc\x4d\xc7\x86\x80\xa5\x47\x62\x4b\xd9\x37\x7e\xaa\xe7\xbc\x27\x93\x92\xf2\xc8\xcf\x46\x62\x2d\x5c\x4f\xcc\xa9\x27\x4c\xac\x29\x60\xd6\x7f\x3f\x97\x2c\xef\xae\x2d\x33\xd0\x8f\x70\xb7\x04\x72\xca\x93\xd5\x66\x77\x72\x48\x13\x2b\x4b\xb8\x22\x3b\xb9\x2c\x0c\xba\xd6\xa8\x80\xb1\xf9\x1f\xf8\x9c\xc4\x52\x75\xa2\x92\xfb\x69\x06\x31\x81\xa8\x23\x0b\x2a\x82\x24\x52\x07\x0c\x6a\xf4\xba\x59\x9f\x70\x61\x3b\x68\x84\xb1\xdc\x4b\xd2\x8d\xa3\xbe\x95\x8c\x1e\x5b\x53\x51\x96\x3f\x56\x55\x20\xef\x67\x38\xa1\x4c\xd3\x0c\xb6\xdf\xdc\xc6\xac\x95\x87\x2f\xc7\x16\xf7\x20\xf6\x25\x9f\xf5\x7a\xcb\x5f\xfa\x7c\xb8\x4d\x43\x4a\x06\x6b\xdd\x21\xec\x0c\x4f\xdd\x04\xbd\xba\xbd\xab\x50\x31\x2e\xfd\x70\xbb\x09\xbe\x3b\x21\x2b\xa0\xfa\xb5\xaa\x4e\xf4\x41\x2f\xc6\xe0\x05\xcb\x25\x7c\xef\x65\xb9\x26\xad\x97\x53\x05\x92\x61\xac\x48\xe1\x57\xd9\x94\xac\x46\x61\x7c\xed\x61\x63\xb1\x14\x06\xc5\x9e\xa5\x28\xbc\x12\x64\x61\x71\xef\xbd\x31\x19\x2a\x9b\x59\x52\x2e\x9c\x43\xf9\xcd\xe2\x41\x26\xe7\xeb\x24\x74\x8c\x8d\x57\x4b\x0e\xe9\x33\x2c\x6b\x97\xff\x45\x34\xae\x4c\x62\x7c\x91\x8e\x08\xaf\xee\xe0\xdb\x6e\xad\x62\x4f\x90\xce\x9a\x1b\xb2\xfc\xbc\x2a\x1f\x90\x65\x9c\x14\x14\x9e\x9e\x7f\x87\x6f\xa6\xf5\x9d\x97\xfe\x95\x79\x9d\x8d\xab\xc7\x25\xb4\x44\xa7\x3c\xc3\x1e\xe5\xa2\x3a\xae\xba\x16\x8f\xaf\x6a\x67\xa1\x37\x96\xc5\xe1\x28\x32\x03\xcb\x4e\xc6\x0f\x21\x05\x60\x29\xba\x95\xdc\x50\x5d\xdb\x78\x0b\xdf\x7d\x69\x6a\xe6\xe7\x7e\x7a\x68\x90\xfa\x21\xca\x18\xc9\x86\x38\x9c\x89\x84\x0c\xac\xd8\xa0\x4a\x7c\x8e\x27\xcc\xbf\x6a\xa9\x92\x2e\x83\x38\x8b\xd9\x37\xbe\x90\xe0\xaf\xba\x7d\x69\x59\xcd\x56\xe0\xb8\xb3\xfa\x6d\x35\xbb\x8c\xa2\xff\x03\x00\x00\xff\xff\x60\x79\x0e\xed\x75\x07\x00\x00"

func xo_dbGoTplBytes() ([]byte, error) {
	return bindataRead(
		_xo_dbGoTpl,
		"xo_db.go.tpl",
	)
}

func xo_dbGoTpl() (*asset, error) {
	bytes, err := xo_dbGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "xo_db.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _xo_packageGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8d\xbf\x4e\x03\x31\x0c\xc6\x67\xfc\x14\xd6\x2d\x85\x25\x79\x06\xd0\x45\x88\xa5\x87\xe0\x06\x18\x43\xce\xbd\x46\x90\x3f\xd8\x56\x05\xaa\xf2\xee\x34\x45\x2c\xa8\x93\x7f\x9f\xfd\x93\x3f\x6b\xf1\xd1\x87\x77\xbf\x12\x1e\x8f\x68\xfe\xb8\x35\x0c\x25\xab\x8f\x59\x50\xf7\x84\xfa\x5d\x49\x70\x57\x18\x25\xec\x29\x79\xdc\x74\xfb\xf9\x97\x5b\xdb\x18\xa8\x17\xbf\x00\x9c\x0a\xee\xdd\xd6\x3d\xdd\xce\x6e\xc4\xbb\x57\x7c\x99\x0c\x8e\x13\x6e\xa7\x19\xdd\xf8\x30\x1b\x80\x98\x6a\x61\xc5\x6b\xb8\x1a\x16\xaf\xfe\xcd\x0b\x59\xf9\xfc\x18\xfe\x65\xbb\x70\x3c\x10\xf7\x35\xe5\x50\x96\x98\x57\x1b\xe4\x70\xce\xcc\x85\xa5\xd3\x2e\x69\x1f\x4c\x2b\x7d\xd5\x4e\xa2\x7c\x12\xcf\x37\x8d\x89\x06\xb8\x01\xf8\x09\x00\x00\xff\xff\xce\x48\x5a\xf1\xf4\x00\x00\x00"

func xo_packageGoTplBytes() ([]byte, error) {
	return bindataRead(
		_xo_packageGoTpl,
		"xo_package.go.tpl",
	)
}

func xo_packageGoTpl() (*asset, error) {
	bytes, err := xo_packageGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "xo_package.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"mysql.enum.go.tpl": mysqlEnumGoTpl,
	"mysql.fkey.go.tpl": mysqlFkeyGoTpl,
	"mysql.idx.go.tpl": mysqlIdxGoTpl,
	"mysql.model.go.tpl": mysqlModelGoTpl,
	"mysql.proc.go.tpl": mysqlProcGoTpl,
	"mysql.query.go.tpl": mysqlQueryGoTpl,
	"postgres.enum.go.tpl": postgresEnumGoTpl,
	"postgres.fkey.go.tpl": postgresFkeyGoTpl,
	"postgres.idx.go.tpl": postgresIdxGoTpl,
	"postgres.model.go.tpl": postgresModelGoTpl,
	"postgres.proc.go.tpl": postgresProcGoTpl,
	"postgres.query.go.tpl": postgresQueryGoTpl,
	"xo_db.go.tpl": xo_dbGoTpl,
	"xo_package.go.tpl": xo_packageGoTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"mysql.enum.go.tpl": &bintree{mysqlEnumGoTpl, map[string]*bintree{}},
	"mysql.fkey.go.tpl": &bintree{mysqlFkeyGoTpl, map[string]*bintree{}},
	"mysql.idx.go.tpl": &bintree{mysqlIdxGoTpl, map[string]*bintree{}},
	"mysql.model.go.tpl": &bintree{mysqlModelGoTpl, map[string]*bintree{}},
	"mysql.proc.go.tpl": &bintree{mysqlProcGoTpl, map[string]*bintree{}},
	"mysql.query.go.tpl": &bintree{mysqlQueryGoTpl, map[string]*bintree{}},
	"postgres.enum.go.tpl": &bintree{postgresEnumGoTpl, map[string]*bintree{}},
	"postgres.fkey.go.tpl": &bintree{postgresFkeyGoTpl, map[string]*bintree{}},
	"postgres.idx.go.tpl": &bintree{postgresIdxGoTpl, map[string]*bintree{}},
	"postgres.model.go.tpl": &bintree{postgresModelGoTpl, map[string]*bintree{}},
	"postgres.proc.go.tpl": &bintree{postgresProcGoTpl, map[string]*bintree{}},
	"postgres.query.go.tpl": &bintree{postgresQueryGoTpl, map[string]*bintree{}},
	"xo_db.go.tpl": &bintree{xo_dbGoTpl, map[string]*bintree{}},
	"xo_package.go.tpl": &bintree{xo_packageGoTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

