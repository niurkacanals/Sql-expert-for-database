// Code generated by go-bindata.
// sources:
// templates/postgres.enum.go.tpl
// templates/postgres.fkey.go.tpl
// templates/postgres.func.go.tpl
// templates/postgres.idx.go.tpl
// templates/postgres.model.go.tpl
// templates/postgres.proc.go.tpl
// templates/xo_db.go.tpl
// templates/xo_package.go.tpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _postgresEnumGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x93\x41\x8f\xd3\x30\x10\x85\xcf\xf1\xaf\x18\x7a\x69\xbc\xea\xba\xe2\xc2\x61\xa5\x9e\x10\x47\xb8\xec\xc2\x05\x71\x70\x13\x7b\x6b\xd1\x38\x60\x3b\x5d\x56\x51\xfe\x3b\xe3\xd8\xa6\x4e\x49\x2a\xe8\xa5\x6a\x26\xe3\x37\x5f\xde\x1b\x6f\xb7\xd0\xf7\xc0\x9e\x5e\x7f\x08\x18\x06\x50\x16\xdc\x41\xc0\xda\xd7\x3e\xe8\xae\x89\xf5\x35\x08\x7c\x00\x87\x4f\x8c\xf8\xdf\xc9\xa1\x4e\x69\xf7\xf6\x1d\x21\x55\xab\xad\x83\x92\xf4\xfd\x3d\x18\xae\x9f\x05\xb0\x2f\xfc\xd8\x09\x8b\x4d\xa4\x88\x93\xc6\x0a\x16\x66\xa6\x5e\x0c\x05\xd9\x9a\x33\x49\x3a\xb7\x66\xa4\x58\xd2\xd9\xe5\x58\xa5\xff\xff\xde\x23\xa5\x56\x8a\x64\xf8\x21\x35\xdc\x23\x0f\x25\x04\x89\x1e\x9d\x51\xfa\x19\x8c\x70\x9d\xd1\x81\xc2\x86\xd2\x69\x3c\xd4\xca\x3f\x64\x51\x96\x11\xd9\xe9\x0a\xbc\xba\x3d\xb4\xc6\x69\xde\x88\x33\x41\xd6\x48\xa3\x78\x49\x93\x64\x4f\x8a\x13\x37\xa3\x95\x88\x14\xab\x84\x14\xf6\x45\xb9\xea\x00\x0b\x8a\x0b\x76\x56\xdc\x8a\x25\x43\x1f\x48\x51\xa4\x29\x3b\x58\x5d\x5a\xb8\xca\x7d\x28\x06\x24\x08\xdf\x9f\xc8\xc8\x30\x7a\xf3\x91\x1b\x7b\xe0\xc7\x27\xf1\xcb\x41\x13\xfe\xdb\xe9\xb2\x68\xd7\x82\xc3\xd7\xff\xe1\x49\x26\x8a\xc6\x94\x5f\xbf\xed\x5f\x9d\xd8\x80\x30\xa6\x35\xd4\x3b\x14\x51\xc2\x8b\x79\x45\x96\x8c\xa5\x1b\xd0\x2a\xe1\x7e\xd6\x4d\x06\xdc\xe9\x59\x64\x69\xda\xe6\x1f\x90\xef\x26\xcc\x13\xe5\xd2\x9f\x8e\x78\x34\x70\x7b\xec\x98\x61\xc8\x74\xec\xa1\xc5\xd5\xe8\xfe\x4e\xc5\xa7\x76\x37\xcf\xb3\x5b\x4a\x3a\x25\x39\xf8\x14\x6b\x21\x79\x77\x74\x5e\x27\x05\xea\xf1\x2c\xfb\x24\x5e\xca\x95\xd2\xb8\xd2\xaa\xce\xed\x58\xd1\x49\xfc\x67\x2f\xc3\x24\xcb\x9d\xb2\x52\x89\x78\x2f\x7e\x1e\xb7\xb5\x51\x27\x61\x02\x88\xf1\xf9\x0b\x23\x79\x25\xc6\x9b\x7a\xdb\x1d\x19\xa5\xfc\x26\xe4\xd2\x33\xfb\x70\x7d\x11\xf2\x3d\x78\xac\xb8\xbe\x40\xaf\xb9\xe3\x7b\x34\x7d\x8b\xdf\xc0\xfc\x7b\x7d\x3b\xfd\x74\x35\xbc\x58\x69\x4d\x75\x56\xeb\x87\x6c\x2b\xf6\x9d\xdc\x40\xfb\x1d\x1e\x76\x80\x4d\x2c\xae\x3b\xba\xae\x24\xbc\xc1\x3a\xb6\x00\xc0\x4d\x61\xcd\x1b\x32\x5d\x55\x1c\x4f\xbd\x2b\xbf\x03\x00\x00\xff\xff\x0e\x16\xf2\x15\xe5\x05\x00\x00"

func postgresEnumGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresEnumGoTpl,
		"postgres.enum.go.tpl",
	)
}

func postgresEnumGoTpl() (*asset, error) {
	bytes, err := postgresEnumGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.enum.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresFkeyGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd7\x57\xa8\xae\x56\xd0\x0b\xa9\x2c\x48\x55\xa8\xad\x55\x28\x4a\x2d\x29\x2d\xca\x2b\x56\x28\xc9\x48\x05\x8b\x07\xa5\xa6\xc1\xa4\x12\x8b\x8b\xf3\x93\x33\x13\x4b\x52\x53\x14\xca\x33\x4b\x32\xe0\x4a\xa0\xf2\xea\xc5\x60\x9e\x5b\x66\x6a\x4e\x0a\x48\xb9\x06\x88\xe7\x9c\x9f\x53\x9a\x9b\xe7\x97\x98\x0b\x52\xa1\xa9\xc7\x95\x56\x9a\x97\x0c\x96\x29\xce\xc8\x2f\x2a\xc9\x03\x89\xc3\xad\xd6\x42\x32\x4c\x13\xcd\x72\x8d\x94\x24\x85\x08\x7f\x17\x27\x4d\x05\x0d\x2d\x54\x19\x1d\x85\xd4\xa2\xa2\xfc\x22\xa0\x06\x2e\x4e\x88\xe3\xd1\xb4\x3a\x55\x42\xf9\x30\x97\x01\xcd\xd2\x51\xc0\xea\x04\x3d\x64\x0f\x68\x72\xd5\x72\x71\x01\x02\x00\x00\xff\xff\x74\x85\x56\x18\x1e\x01\x00\x00"

func postgresFkeyGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresFkeyGoTpl,
		"postgres.fkey.go.tpl",
	)
}

func postgresFkeyGoTpl() (*asset, error) {
	bytes, err := postgresFkeyGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.fkey.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresFuncGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x93\xcf\x6a\xdc\x30\x10\xc6\xcf\xf2\x53\x4c\xc3\x12\xe4\xd6\x71\xda\x6b\xc0\x97\xa6\xf4\x98\xed\xbf\x43\x21\x04\xaa\x5d\xcb\xa9\x40\x2b\xd9\x92\xdc\x66\x31\x79\xf7\xce\x48\x5e\xaf\xdd\x64\xa1\x94\xdc\xac\x4f\x33\x9a\xf9\xe6\x37\x1e\x06\x58\x7d\xee\xa5\xdb\x5f\xdb\xdd\x4e\x9a\xe0\xe1\xaa\x82\x72\xa9\x3c\x3e\x66\xc3\x70\x01\xaa\x81\x72\xd4\xe0\x02\xb5\xcb\x4b\xc0\xec\x49\x1a\xa3\xa4\xf6\x72\x7e\x7d\x23\x76\x12\xef\xc0\xf5\xc6\x83\x80\x6d\xef\x83\xdd\x41\x47\x05\x0a\x70\x32\xf4\xce\x28\x73\x8f\x5f\xbe\xd7\x58\x4b\xf8\x98\xf5\x6d\xdf\x52\x56\x99\x9e\x34\x35\xbd\xde\xf4\x66\xbb\x78\x92\xd7\x1b\xf8\xbe\xfe\xf0\x1e\x35\x27\xcc\xbd\x84\x95\x2a\x60\xd5\x46\x07\x9f\x84\xc3\xa8\x20\x1d\xb5\x5f\x50\x9a\x32\xb5\x7c\xa0\xeb\xb7\x94\x3b\x17\xde\xa1\x80\xe7\x54\x26\x07\x4e\x77\x0d\x18\x1b\xa0\x5c\x1b\xbd\x5f\x1b\xaa\x76\x7b\x37\x85\xbc\x9e\x75\x58\x80\x74\xce\xba\x1c\x86\x8c\xfd\x12\x8e\x4e\x49\xc9\x32\x86\x13\xf0\x9d\x4e\x5e\x33\xb6\xb5\xc6\x07\x12\x7c\x70\x50\xc1\xb2\x69\x7d\x1c\x7b\x6a\x06\x1b\x58\x29\x6a\xf4\xcd\x54\x36\xa9\x7c\x6c\x7b\x89\x68\xa5\x72\x0a\x4e\x33\x3f\x11\x31\x77\x39\xab\x90\xb1\x61\x20\x11\x99\xfd\xa0\x6d\xd0\x90\x3e\xc6\xa9\x47\x1b\x08\x6f\xb4\x71\x58\x84\xe3\x60\x92\x6f\x4c\xf0\x3f\xad\x0b\x86\xd8\x1c\x86\x33\x47\x99\x31\x1a\x4d\x05\xf5\x26\xd9\xfc\x62\x7f\xf3\x34\x8c\x69\x12\x27\xa1\x95\x91\xd9\x11\x51\xf9\x75\x2b\x0c\x61\x6a\x94\xd4\x35\x95\xf4\x58\x47\x6c\xb4\x2c\x3f\x92\xe2\x81\xb7\x4e\xe1\x4e\x9e\x9d\x9f\x01\xff\xab\xaf\x9c\x26\x95\x67\x0c\x5d\x50\x47\xaf\x2a\x30\x4a\x13\x3e\x96\xb6\x91\x8e\x91\x6a\xc6\xc8\xfd\x28\x9e\x3f\x6b\xb0\xa0\xe0\xe3\xda\x93\xcb\x2e\xe6\x12\xce\x83\xd3\xff\xb6\xf9\x8f\x3d\xb2\x5a\x36\xd2\x41\x57\x5e\x6b\xeb\x25\xcf\x13\x32\x6d\x45\x7d\xf8\xab\xc8\x45\xfc\xb1\x6f\xef\xe6\xbb\x3b\x60\x6e\x63\x29\xf3\x46\x3e\x04\x1e\x77\x98\x3d\xf5\x89\x1c\xaf\x2a\x58\xe6\x61\x20\x6d\x37\x62\xc0\xaf\x04\xb6\x7b\x11\x2a\xcf\x58\x7e\xea\x39\x82\x89\x9e\x2a\x10\x6d\x8b\xe3\xe2\x78\x28\x4e\x40\xca\x17\x20\x63\xe0\x44\x2d\xed\x38\x5e\xff\x09\x00\x00\xff\xff\xa7\x69\x4f\x34\x08\x05\x00\x00"

func postgresFuncGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresFuncGoTpl,
		"postgres.func.go.tpl",
	)
}

func postgresFuncGoTpl() (*asset, error) {
	bytes, err := postgresFuncGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.func.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresIdxGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x54\x5f\x4f\xdb\x3e\x14\x7d\x8e\x3f\xc5\xfd\xa1\x0a\x25\xbf\x95\xa0\xbd\x22\xe5\x61\x40\xd1\xd0\x18\x30\x60\xda\xa4\x69\x5a\x4d\xe2\x14\x6b\x8e\x9d\xda\x09\xb4\xaa\xfa\xdd\x77\xaf\x93\xf4\xcf\x28\x5a\x1e\xd0\x9e\x26\xf5\xc1\x76\xce\xb5\xcf\x3d\xf7\x9c\x2e\x16\x20\x73\x88\xcf\xdd\x67\x2d\xa7\xb5\x80\xe5\x92\x1d\x1e\x02\x9e\xc6\x77\xf3\x92\xb6\xc7\xf3\x06\x32\xa9\x20\x54\x42\x43\x7c\x26\x85\xca\x5c\x04\x6f\xf1\x23\xe1\x2e\x79\x21\x9a\xa5\x50\xae\x5d\x59\xae\x27\xa2\x83\xb6\x38\xbf\x69\x81\x7a\x6b\x01\x56\x54\x56\x8a\x47\xe1\x80\x83\x35\x4f\x90\x5b\x53\x34\x1c\xf8\xbd\x12\xb7\xe9\x83\x28\x38\xe2\xe2\xd5\x51\xfb\x26\x70\xaa\xd8\x20\x1b\x23\x79\xe2\x7f\x61\xcc\x4f\x07\x75\x09\xb5\x93\x7a\x02\x52\x67\x62\xe6\x71\xe7\xb4\x6a\xab\x63\x96\xd7\x3a\xfd\xcb\xbd\x86\xd9\x3d\x7c\xbd\x3a\x3d\xc6\x83\x89\x29\xb9\xe5\x85\x92\xae\x5a\x95\x57\xd6\xcf\x20\x82\xf0\xff\x0d\x5e\x43\x10\xd6\x1a\x1b\xc1\x82\x05\x8f\xdc\xd2\xae\x39\x61\x2c\xc0\x6e\xdd\x54\x01\xce\xce\xce\x59\x90\x1a\x8d\xb7\xe1\x81\xab\x2c\x24\x30\xbe\x1d\x5d\x8c\x4e\xee\x60\x0c\x6f\x58\x10\x8c\xf1\xca\xd4\x28\x8d\x4d\xb8\x56\xc8\x35\xed\x0e\x73\x76\x73\xf5\xb1\x97\xf6\x2d\xfe\xcb\xfb\xd1\xcd\x08\x56\x3a\x0c\xe4\x10\x06\x39\x1c\x25\xdb\x8a\xa0\xa8\x03\x49\x55\xef\x2e\x4f\x61\x53\x95\x41\x1e\x9f\x18\x55\x17\xba\xbb\x36\x81\x01\xe1\x71\x30\xbe\x60\x85\x1d\x37\xbd\xda\x5a\x77\xbd\xe2\x27\xf7\x60\x6c\x45\xfd\xac\xa4\xa2\x97\x37\x94\x5b\x10\xec\xc0\x5b\xbc\xe9\xf7\xda\xca\x82\xdb\xf9\x07\x31\xef\x66\x84\x4d\xfc\x10\x33\x1c\x82\x3b\xf2\xf2\x0f\xfd\xcd\xf4\xe8\x01\x7d\xc4\x1f\xc9\x9d\x40\x76\x1f\x7f\xa2\x87\x6f\xcc\x53\xd8\x08\xfc\xc2\x0c\x73\xde\x78\x23\x8a\x6f\x53\xae\x43\x44\xe5\xf4\x61\x97\xec\x61\x69\xa5\xae\x60\x6f\x7f\x0f\xc2\xdf\x7a\x89\x22\xba\x82\x05\x48\x9d\xde\xff\x2f\x01\x2d\x15\x19\x20\xc0\xb4\xd4\x56\xd3\xd6\xfb\x82\x28\xb2\xee\x70\x7f\xa7\x28\x43\x02\xb3\x25\x5b\xfb\xb6\x0b\xf9\xb5\xaa\x2d\x57\x9d\xf5\x3b\x7f\x6f\x04\x12\xe3\xe8\x7a\xe7\x11\xf9\xf0\xf4\xe1\xd5\x52\xb9\x9b\x5c\xef\x04\x7d\xfb\xfe\x2f\x43\x7f\xca\xd0\xd4\xcb\x42\x4f\x75\xf6\xee\xe9\xed\x9e\xc6\x0c\x32\x91\x0b\x0b\xd3\xf8\x44\x19\x27\xc2\xa8\x21\xa0\x0c\xcf\xd0\x63\xae\x56\x95\x23\xeb\x3a\x22\xb0\x3d\xae\x05\xd6\xe6\x86\x2a\x2f\xc5\xac\x0a\xfd\xd8\xfa\x26\xbe\x4f\xe4\x9f\x65\x7e\x2b\xf4\x3e\x52\xde\x16\x98\x60\x5c\x35\xff\x00\xd3\x57\x09\xf4\x0e\xe1\x9e\x2b\xd7\x10\x20\x65\x12\xe0\x65\x89\xc4\x42\xdc\x0c\x5f\xc8\x77\xb4\xf5\x1f\xe0\x81\xeb\xc0\xfb\xc9\x33\xf6\x2b\x00\x00\xff\xff\x73\x00\x68\x87\xe9\x07\x00\x00"

func postgresIdxGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresIdxGoTpl,
		"postgres.idx.go.tpl",
	)
}

func postgresIdxGoTpl() (*asset, error) {
	bytes, err := postgresIdxGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.idx.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresModelGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x56\x51\x73\xe3\x44\x0c\x7e\x8e\x7f\x85\xee\x86\x01\x87\xcb\xf9\x86\x07\x1e\xb8\x99\x3c\x1c\xd4\x07\x1d\x4a\xda\x4b\x52\xe0\xad\xdd\xd8\x4a\xeb\xc1\xde\xcd\xed\xae\xdb\x66\x32\xf7\xdf\x91\x76\x6d\xd7\x6d\x9c\xe0\x86\xc0\x4b\x1b\xaf\xa5\x4f\x9f\x56\xfa\x24\x6f\x36\x6f\x21\x5b\x42\xf4\x93\x2a\x0a\x94\x16\xde\x7e\xf9\x12\xbc\x7b\x07\x9b\xcd\xe3\x11\x9d\xb0\x15\xe6\x06\xdb\xaf\xe7\xeb\x15\xd2\x3b\xd0\xb8\xd2\x68\xc8\xd0\x80\x00\xad\xee\x61\xa9\x55\xe1\x2d\xc4\x22\xc7\x59\x72\x8b\x85\x20\xc3\xa8\x39\x9a\x88\x82\x3d\x23\x0f\x2b\x53\x8e\x60\x19\xad\x0d\x6b\xac\x2e\x13\x0b\x1b\x67\xa4\x85\xbc\x41\x88\x3e\x66\x98\xa7\x86\xcd\x07\x6c\xea\x1e\xd9\x96\x1e\x34\x3a\x84\xda\x9d\x4e\x38\xab\xb9\xb8\xe1\xf7\xd7\x3e\x34\xff\xe6\x9f\x3e\x24\x34\x69\xe6\x65\x21\x2b\x4e\x6d\x4a\xf5\xd5\x5c\xe8\xac\x10\x7a\xfd\x2b\xae\xeb\x80\x41\x30\x20\xe7\x07\x05\x4b\x47\x28\x18\x5c\xe1\x43\x66\xac\x19\xc1\x55\x8a\x39\x5a\x4c\x61\xa1\x54\x1e\x34\xb1\x02\x72\xa9\x28\x75\xa0\x11\x56\xec\xfc\x21\x25\x5f\x5d\x64\x12\x0d\xdb\xda\xdb\xa7\x57\xe2\x83\x40\x26\xdd\x9b\x54\x58\xb1\x10\x06\xa3\x60\x59\xca\x04\x42\xb2\x34\xb7\x4a\x5b\xc9\x99\x34\x3e\xdf\xb6\x00\x86\x55\x98\x70\xe8\xe8\xd1\xdd\x0e\xe8\xda\x4a\x2d\xa1\xd3\x37\xaa\xb2\x62\xf2\x44\xf1\xa4\xca\x6c\xa5\xd5\x5d\x96\x32\x43\xb9\x54\xba\x10\x36\x53\xb2\x8b\xed\xad\x30\xb0\x40\x94\x50\x5f\x89\xeb\x8b\x43\x99\x57\xd1\x7b\x53\xaf\x82\x56\xdc\x4f\xa5\x41\x6d\x89\x31\xff\x33\x5b\x54\xad\x3a\x98\x97\x47\x0e\xd3\x05\xfc\x79\x7e\xf2\xe3\x10\x50\x6b\xa5\x99\xde\x9d\xd0\xfc\xe0\x0f\x7c\xc3\xd0\x25\x89\x5c\xa3\x48\xd7\xbe\x94\x23\x58\x88\x2c\x0f\x06\x74\xbe\xb7\x00\x0c\x57\xa7\xeb\xe0\x4c\x34\xc1\xfb\xf0\xb5\x4f\x07\x96\x04\x82\xe9\xfb\xa7\xd8\xe6\xf5\x30\x18\x54\x8d\x6a\x3e\xe7\xf0\xb9\x44\xbd\x0e\x06\x89\x92\xc6\xf2\x01\xc9\x0b\xc6\x70\x7d\x3a\x99\xc5\xd3\x39\x9c\x4e\xe6\xe7\x7d\x24\x0b\xe1\x35\xbc\x21\x32\xac\xa2\x44\xe5\xcc\xd6\x34\xb2\xec\x68\xed\xca\x7a\x08\xbf\x7f\x38\xbb\x8c\x67\xcf\xdc\xef\x44\xde\xcf\x7b\x1a\xcf\x2f\xa7\x93\xd3\xc9\xcf\x8e\xe3\xa3\x21\xdb\xf8\x14\x75\x29\xeb\x14\xf9\xd2\xc7\x90\x2e\xa2\x4f\xfc\x3c\x55\xf7\xa1\x4f\x77\xc4\xce\x4e\xb0\x4f\x69\x87\xcf\x2e\x7e\xd8\x45\x65\x18\xcd\x12\x21\xc3\xaf\xbb\xeb\xf4\x94\x55\xe3\xe3\x2a\xcb\x74\x5e\x8d\x41\x66\xf9\xb3\x32\x3e\x96\x07\xad\xaf\x19\xca\x04\xdd\x64\xdb\xd3\x0a\x63\xa0\xb9\x88\x41\xd3\xfe\x84\x5b\xf5\xf8\xe5\x8a\xfa\x17\xa1\x74\xff\xb6\x7b\xfc\x5f\x4c\x0d\x8f\xdc\xbb\xc7\x53\x85\x46\x7e\x63\xb7\x7a\xfc\xd5\x41\x4d\xee\xf3\x69\x9a\x9c\xc1\x41\xaa\x0a\xbd\xd5\xe4\x1c\xd8\x6b\xfe\x9f\x65\x55\x4f\xa4\x7e\x21\xa9\xac\x7f\xf1\xf8\xa2\x9c\x9d\x23\xcd\xbb\x7e\xe2\xba\xbc\x38\xf9\x30\x8f\x7b\xe9\x6a\x16\xcf\x0f\xd6\xd6\x18\x42\x38\x4c\x57\x7f\xfc\x12\x4f\xe3\x6d\x4d\x11\xe2\x57\x1e\x29\x51\x25\x7d\x00\xec\x83\xda\x92\xdf\xd5\x08\x1a\x05\xc6\x0f\x98\x1c\x43\x7d\xa3\x1d\x85\xdc\xa9\xbb\x96\xca\xbc\x38\x66\xe2\x0e\xc1\xd0\x9f\xa3\x0e\x7f\x46\xed\x90\xc5\xce\xc6\x6b\xd6\x6f\xab\xf1\xba\x2d\x1b\xc9\x55\x8d\xb6\xd7\xb8\xd9\x41\xc3\x66\x14\xb8\xc5\xb0\x42\xcd\x1b\x9a\xbe\xcb\x24\x8d\x05\xbf\x2b\x98\xe1\x63\x0a\x11\x59\xb3\xc3\xe4\x7c\x1e\xbf\x87\x0b\x65\xec\x8d\xc6\xd9\xa7\x33\xf8\x21\xfa\xfe\x0d\x28\x99\xaf\x5f\x34\x26\x76\xac\xc2\xad\x51\xe5\x97\x79\xa5\xd7\xed\x8a\x1c\xe1\x43\xe1\x7f\x1c\x56\x9c\xd6\x91\x86\x50\x1b\x6a\xcf\x5c\x39\x89\xcf\x62\x9a\x2b\x1f\xa7\xe7\xbf\xf5\x1a\x2e\x7b\x64\xfe\xdd\xcb\x04\xfc\x9f\xec\xbe\xfa\x53\x6d\xd7\xe6\xab\x2f\xaa\x7b\xf5\xb5\x3e\xd8\x83\xbf\x03\x00\x00\xff\xff\x86\x0a\x5e\x8b\xcd\x0c\x00\x00"

func postgresModelGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresModelGoTpl,
		"postgres.model.go.tpl",
	)
}

func postgresModelGoTpl() (*asset, error) {
	bytes, err := postgresModelGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.model.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _postgresProcGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\xc1\x6e\xf2\x30\x10\x84\xcf\xf6\x53\xec\x7f\xf9\x09\x12\x0a\x4f\xc0\xa5\x2d\xb7\x8a\x52\xe0\xd0\x23\xc6\x59\x4a\x24\x63\x87\xb5\x4d\x85\x50\xde\xbd\xbb\x09\x91\xa8\xaa\x56\x3d\x59\x1e\xaf\x67\xbe\x9d\xe9\x14\xae\x57\x28\x17\xe6\x88\xd0\xb6\x60\x8d\x73\x11\xd2\x01\x21\xa6\x40\x58\x41\x43\xc1\x62\x95\x09\x61\x24\x73\x1b\xb3\x73\xb8\xb6\x07\x3c\x1a\x1e\x2f\x45\x5a\xf2\xc4\xed\x7b\x31\xdc\x97\x86\x58\x49\x48\x9b\x4b\x83\x91\x5f\xc6\x30\x3c\xad\x30\x65\xf2\xa2\xb3\x3c\x82\xe0\xa1\xda\x95\x7a\x9f\xbd\xbd\x07\x29\xaa\x1d\xbc\xbd\x3c\x3d\xb0\xf4\x1e\x1a\x71\x73\x75\x4c\xec\x30\x18\x33\x24\x65\xec\x9c\x25\x95\x30\x89\x63\xf9\xc5\x7d\x02\x48\x14\x88\xb3\xb5\x3a\x1b\x92\x5b\xaf\x68\xad\x78\xef\x78\x72\x70\xca\x48\x17\xad\x6c\xf0\xec\xce\x42\x4c\x04\x33\xd8\xae\xe7\xcf\xf3\xc7\x0d\xfc\x6d\x63\x1b\xdc\xd9\x70\x6b\xf7\x70\xcc\xb5\xed\x53\x28\xfb\x21\x45\x18\x18\x14\x7e\xe2\xd5\x4a\x08\x67\x52\xc8\xab\xfc\x58\x85\x8f\xa2\x67\xfa\xa5\x86\x3d\x47\x77\x3d\x94\x6b\x6b\x7c\xf1\x9f\x9d\xc7\x5a\xd5\xfb\x6e\xdb\x7f\x33\xf0\xb5\x93\xfd\x15\x75\x49\x7d\x36\x6b\x7d\xfc\xa2\x76\xdf\x1b\xd3\xaa\x65\xf4\xdb\x3c\x1f\x13\xf1\xd0\xac\x7d\x06\x00\x00\xff\xff\x98\xa8\xf4\xd5\x2c\x02\x00\x00"

func postgresProcGoTplBytes() ([]byte, error) {
	return bindataRead(
		_postgresProcGoTpl,
		"postgres.proc.go.tpl",
	)
}

func postgresProcGoTpl() (*asset, error) {
	bytes, err := postgresProcGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "postgres.proc.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _xo_dbGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x54\xcb\x6e\xeb\x38\x0c\x5d\xc7\x5f\xc1\x1a\x33\x80\x9d\x49\x9d\xc9\x2c\x0b\x64\x31\x8f\x6e\x06\x98\xc7\x6d\x8b\x8b\x0b\x24\xb9\x88\xe2\xd0\x8d\x50\x5b\x72\x25\x39\x4d\x10\xe4\xdf\x2f\x29\x3f\x6a\xa7\x8f\x8d\x61\x51\x3c\x87\xe4\xd1\x91\xa6\x53\xf8\xf6\xdf\x5f\x7f\x80\xb4\xe0\x76\x08\xa9\x2e\x0a\xad\x40\x2a\x87\x26\x13\x29\x42\xa6\x0d\x6c\x85\x13\x1b\x61\x11\x74\x89\x46\x38\xa9\x15\x27\x0b\x07\xa9\x50\xb0\x41\xa8\x2c\x6e\xe1\x45\xba\x5d\x40\x6c\xee\x58\xa2\x85\xcc\xe8\x02\x4e\x27\x48\xee\xd3\x1d\x16\x02\xce\xe7\x84\x36\x79\xff\x61\x47\xa5\xec\x4e\x57\x39\x61\xb4\x79\xf2\xc0\xae\xc4\xd4\x3e\xe7\x09\xb5\x23\xd4\x76\x18\x7b\x38\x24\x01\x53\x37\xdd\x76\xfd\x9d\x82\xd1\xed\x01\xd3\xc8\x3a\x23\xd5\xe3\x04\x92\x24\xe9\x36\x4f\xe7\x18\x22\x06\xdf\xa1\xad\x72\x37\x01\x34\x46\x9b\x38\x18\x7d\xa9\xd0\x1c\x3f\x86\x8c\x3d\x46\xbf\xd8\x0b\x04\x85\x3e\x04\xb5\x98\xe0\x1c\xf0\x94\xf7\x24\x8d\x42\xf3\x55\xe4\x04\xfc\x54\xdc\x5a\x2f\x2f\xa7\x2c\xca\x1c\x0b\x54\x0e\x36\x9a\x34\x21\x08\x53\x0d\x64\x68\x78\xbd\x3e\xb4\x9e\x6e\x8d\xdc\xa3\x49\xda\x3a\x2d\xb3\x6d\xc4\xba\x68\xa3\xaf\x5a\x8f\x2d\x18\x0d\x68\xda\x11\xfc\xa4\xf7\xb9\xa4\x7c\x1a\x40\x80\xf5\xbf\x3a\x83\x5a\x83\xae\x46\x2f\x6f\xb1\xaa\xf7\x3c\xc1\x73\xa5\x1d\xde\xda\x54\x94\x78\x87\x8f\x78\x68\x65\x30\x7e\xe1\x34\x14\xc2\xa5\x3b\x40\x9f\xb1\x85\x74\x27\x8c\x48\xa9\x43\x4b\x8d\x72\x39\xcf\x94\x04\x7b\x61\xde\x52\xcd\x6b\x96\x32\xf9\xa7\xb2\xee\x4f\x5d\x94\x32\xc7\x68\x1d\x2d\xbe\x2f\x97\xab\x68\x41\x9f\xd3\x6f\xe7\x78\x1c\x2f\x97\xe1\x3a\xee\x0e\x04\x2c\x99\xd7\x66\x12\xeb\x3e\xfa\x7a\x0e\xcf\xa4\x37\x52\x12\x64\x95\x4a\xc9\x46\x16\xc6\xbd\x70\xec\x09\x23\x6b\x52\x18\xd8\xc0\xfb\x85\xe5\xdd\x54\xd9\x04\xf4\x13\xdc\xcc\x81\x92\x92\x68\xb1\xda\x1c\x1d\x92\x93\x64\x06\x57\x14\xa7\x94\x91\x41\x57\x19\x55\x63\x6c\xf2\x2f\xbe\x44\xa1\x54\x7b\x91\xcb\x6d\xbf\x83\x90\x40\x74\x22\x23\x1a\x82\x24\x52\x8f\x58\xab\xd1\xe8\x66\x7d\xc3\xa9\xdd\x43\x29\x8c\xe5\xb3\x24\xdd\xb8\xea\xa5\x64\x74\x09\xca\x9c\xba\xfc\x3d\xcf\x6b\xf2\xc6\xca\x11\x75\x1a\x4f\x60\xfd\xd3\x2c\x64\xad\x3c\x7c\xde\x1d\x71\x03\xe2\x5c\xca\x59\x2e\xd7\xfc\xa5\xcf\xf5\x2c\xae\x5b\x32\x58\xe8\x3d\xc2\xc6\xb0\xeb\x7a\xe8\xc5\xec\x26\x47\xc5\xb8\xf8\x7a\xb6\xaa\x73\x37\x42\xe6\x40\xf3\x6b\x95\x1f\xe9\x83\x5e\x8c\x36\x0b\xe6\x73\xf8\xd5\xcb\x32\x26\xad\xe7\x7d\x05\xa2\xd6\x56\xa4\xf0\xab\x6c\x4a\xe6\x9d\x30\x7e\xf6\xfa\x25\x61\x29\x0c\x8a\x2d\x4b\x91\x7a\x25\x28\xc2\xe2\xde\xf9\x60\xd4\x4e\x36\x88\xc4\x3c\x38\x97\xf2\x37\xde\x83\x4c\xc2\xdb\x51\x7d\x62\x1c\xbc\x9a\x73\x49\xdf\x61\x56\xb8\xe4\x7f\xa2\x71\x59\x14\xe2\x41\x3a\x22\xbc\xba\x81\x9f\xf7\x4b\x15\x7a\x82\x78\x70\xb8\x75\x97\x6f\xa7\xf2\x05\x59\xc6\xde\x40\xf5\xd5\xf3\xf7\xf0\xc2\xad\x1f\xdc\xf4\x4f\xfc\x3a\xb0\xab\xc7\x45\xf4\xb8\xf5\x79\xda\xf7\x8d\x87\x62\x1e\x39\x01\xcb\xc3\x1b\x6f\x33\xa2\xe0\x61\xad\x5d\xc8\x15\xb5\xbe\x0e\xd7\xf0\xcb\x7b\xc6\x18\xae\x1b\x83\x90\x57\x1a\x9f\x4c\x18\xc9\x81\xb0\x5e\x13\x09\x05\x58\x94\x76\xf0\xf0\x14\xf6\x98\xff\xd6\x92\x1c\x41\x3c\xe1\x24\xe4\xe4\xf0\x4c\xa2\xbe\x6a\xf3\xde\x83\x34\x78\xe6\xba\x77\xa9\x79\x91\x06\x9b\x41\xf0\x23\x00\x00\xff\xff\x81\x7e\xd8\xa8\xf1\x06\x00\x00"

func xo_dbGoTplBytes() ([]byte, error) {
	return bindataRead(
		_xo_dbGoTpl,
		"xo_db.go.tpl",
	)
}

func xo_dbGoTpl() (*asset, error) {
	bytes, err := xo_dbGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "xo_db.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _xo_packageGoTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8d\xbf\x4e\x03\x31\x0c\xc6\x67\xfc\x14\xd6\x2d\x85\x25\x79\x06\xd0\x45\x88\xa5\x87\xe0\x06\x18\x43\xce\xbd\x46\x90\x3f\xd8\x56\x05\xaa\xf2\xee\x34\x45\x2c\xa8\x93\x7f\x9f\xfd\x93\x3f\x6b\xf1\xd1\x87\x77\xbf\x12\x1e\x8f\x68\xfe\xb8\x35\x0c\x25\xab\x8f\x59\x50\xf7\x84\xfa\x5d\x49\x70\x57\x18\x25\xec\x29\x79\xdc\x74\xfb\xf9\x97\x5b\xdb\x18\xa8\x17\xbf\x00\x9c\x0a\xee\xdd\xd6\x3d\xdd\xce\x6e\xc4\xbb\x57\x7c\x99\x0c\x8e\x13\x6e\xa7\x19\xdd\xf8\x30\x1b\x80\x98\x6a\x61\xc5\x6b\xb8\x1a\x16\xaf\xfe\xcd\x0b\x59\xf9\xfc\x18\xfe\x65\xbb\x70\x3c\x10\xf7\x35\xe5\x50\x96\x98\x57\x1b\xe4\x70\xce\xcc\x85\xa5\xd3\x2e\x69\x1f\x4c\x2b\x7d\xd5\x4e\xa2\x7c\x12\xcf\x37\x8d\x89\x06\xb8\x01\xf8\x09\x00\x00\xff\xff\xce\x48\x5a\xf1\xf4\x00\x00\x00"

func xo_packageGoTplBytes() ([]byte, error) {
	return bindataRead(
		_xo_packageGoTpl,
		"xo_package.go.tpl",
	)
}

func xo_packageGoTpl() (*asset, error) {
	bytes, err := xo_packageGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "xo_package.go.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"postgres.enum.go.tpl": postgresEnumGoTpl,
	"postgres.fkey.go.tpl": postgresFkeyGoTpl,
	"postgres.func.go.tpl": postgresFuncGoTpl,
	"postgres.idx.go.tpl": postgresIdxGoTpl,
	"postgres.model.go.tpl": postgresModelGoTpl,
	"postgres.proc.go.tpl": postgresProcGoTpl,
	"xo_db.go.tpl": xo_dbGoTpl,
	"xo_package.go.tpl": xo_packageGoTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"postgres.enum.go.tpl": &bintree{postgresEnumGoTpl, map[string]*bintree{}},
	"postgres.fkey.go.tpl": &bintree{postgresFkeyGoTpl, map[string]*bintree{}},
	"postgres.func.go.tpl": &bintree{postgresFuncGoTpl, map[string]*bintree{}},
	"postgres.idx.go.tpl": &bintree{postgresIdxGoTpl, map[string]*bintree{}},
	"postgres.model.go.tpl": &bintree{postgresModelGoTpl, map[string]*bintree{}},
	"postgres.proc.go.tpl": &bintree{postgresProcGoTpl, map[string]*bintree{}},
	"xo_db.go.tpl": &bintree{xo_dbGoTpl, map[string]*bintree{}},
	"xo_package.go.tpl": &bintree{xo_packageGoTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

