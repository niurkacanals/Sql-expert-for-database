// Code generated by 'yaegi extract github.com/xo/xo/templates/gotpl'. DO NOT EDIT.

package internal

import (
	"github.com/xo/xo/templates/gotpl"
	"reflect"
)

func init() {
	Symbols["github.com/xo/xo/templates/gotpl/gotpl"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Conflict":      reflect.ValueOf(gotpl.Conflict),
		"ConflictKey":   reflect.ValueOf(gotpl.ConflictKey),
		"Context":       reflect.ValueOf(gotpl.Context),
		"ContextKey":    reflect.ValueOf(gotpl.ContextKey),
		"Custom":        reflect.ValueOf(gotpl.Custom),
		"CustomKey":     reflect.ValueOf(gotpl.CustomKey),
		"Esc":           reflect.ValueOf(gotpl.Esc),
		"EscKey":        reflect.ValueOf(gotpl.EscKey),
		"FieldTag":      reflect.ValueOf(gotpl.FieldTag),
		"FieldTagKey":   reflect.ValueOf(gotpl.FieldTagKey),
		"Files":         reflect.ValueOf(&gotpl.Files).Elem(),
		"ImportKey":     reflect.ValueOf(gotpl.ImportKey),
		"Imports":       reflect.ValueOf(gotpl.Imports),
		"InitialismKey": reflect.ValueOf(gotpl.InitialismKey),
		"Initialisms":   reflect.ValueOf(gotpl.Initialisms),
		"Inject":        reflect.ValueOf(gotpl.Inject),
		"InjectFile":    reflect.ValueOf(gotpl.InjectFile),
		"InjectFileKey": reflect.ValueOf(gotpl.InjectFileKey),
		"InjectKey":     reflect.ValueOf(gotpl.InjectKey),
		"Loader":        reflect.ValueOf(gotpl.Loader),
		"NewFuncs":      reflect.ValueOf(gotpl.NewFuncs),
		"NotFirst":      reflect.ValueOf(gotpl.NotFirst),
		"NotFirstKey":   reflect.ValueOf(gotpl.NotFirstKey),
		"Pkg":           reflect.ValueOf(gotpl.Pkg),
		"PkgKey":        reflect.ValueOf(gotpl.PkgKey),
		"TagKey":        reflect.ValueOf(gotpl.TagKey),
		"Tags":          reflect.ValueOf(gotpl.Tags),
		"UUIDKey":       reflect.ValueOf(gotpl.UUIDKey),

		// type definitions
		"Enum":          reflect.ValueOf((*gotpl.Enum)(nil)),
		"EnumValue":     reflect.ValueOf((*gotpl.EnumValue)(nil)),
		"Field":         reflect.ValueOf((*gotpl.Field)(nil)),
		"ForeignKey":    reflect.ValueOf((*gotpl.ForeignKey)(nil)),
		"Funcs":         reflect.ValueOf((*gotpl.Funcs)(nil)),
		"Index":         reflect.ValueOf((*gotpl.Index)(nil)),
		"PackageImport": reflect.ValueOf((*gotpl.PackageImport)(nil)),
		"Proc":          reflect.ValueOf((*gotpl.Proc)(nil)),
		"Query":         reflect.ValueOf((*gotpl.Query)(nil)),
		"QueryParam":    reflect.ValueOf((*gotpl.QueryParam)(nil)),
		"Table":         reflect.ValueOf((*gotpl.Table)(nil)),
	}
}
